{"version":3,"sources":["routes/Posts/Hero/Add/index.jsx"],"names":["FormItem","Form","Item","Option","Select","Registration","state","categories","posts","componentDidMount","_callee","data","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","axios","get","sent","_this","setState","stop","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","id","Hero","post","then","result","message","NotificationManager","success","setTimeout","history","push","catch","_ref2","Object","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee2","error","_error$response","statusText","_context2","response","_x","apply","this","arguments","getFieldDecorator","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","antd__WEBPACK_IMPORTED_MODULE_10__","className","title","antd__WEBPACK_IMPORTED_MODULE_8__","onSubmit","assign","labelCol","xs","span","sm","wrapperCol","label","rules","required","whitespace","antd__WEBPACK_IMPORTED_MODULE_9__","length","map","key","value","concat","offset","antd__WEBPACK_IMPORTED_MODULE_11__","type","htmlType","react_notifications__WEBPACK_IMPORTED_MODULE_14__","Component","RegistrationForm","create"],"mappings":"6PA4BMA,EAAWC,IAAKC,KACdC,EAAWC,IAAXD,OAEFE,6MACJC,MAAQ,CACNC,WAAY,GACZC,MAAO,MAITC,uCAAoB,SAAAC,IAAA,IAAAF,EAAAG,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACEC,IAAMC,IAAI,qBADZ,OACZX,EADYO,EAAAK,KAEVT,EAASH,EAATG,KACRU,EAAKC,SAAS,CAAEd,MAAOG,IAHL,wBAAAI,EAAAQ,SAAAb,QAMpBc,aAAe,SAACC,GACdA,EAAEC,iBACFL,EAAKM,MAAMC,KAAKC,wBAAwB,SAACC,EAAKC,GAC5C,IAAKD,EAAK,KACME,EAAOD,EAAbE,KACRf,IAAMgB,KAAK,kBAAmB,CAAEvB,KAAM,CAAEqB,QAAQG,KAAK,SAACC,GAAW,IAErDC,EACND,EADFzB,KAAQ0B,QAEVC,sBAAoBC,QAAQF,EAAS,UAAW,KAChDG,WAAW,WACTnB,EAAKM,MAAMc,QAAQC,KAAK,qBACvB,OACFC,MARH,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAjC,EAAAC,EAAAkC,KAQS,SAAAC,EAAOC,GAAP,IAAAC,EAAAb,EAAAc,EAAA,OAAAvC,EAAAC,EAAAC,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,OAAAiC,EACmCD,EAAMI,SAAhChB,EADTa,EACCvC,KAAQ0B,QAAWc,EADpBD,EACoBC,WAC3Bb,sBAAoBW,MAAMZ,GAAWc,GAF9B,wBAAAC,EAAA7B,SAAAyB,MART,gBAAAM,GAAA,OAAAV,EAAAW,MAAAC,KAAAC,YAAA,gFAiBG,IACCC,EAAsBF,KAAK7B,MAAMC,KAAjC8B,kBAENlD,EACEgD,KAAKlD,MADPE,MAwBF,OACEmD,EAAA9C,EAAA+C,cAACC,EAAA,EAAD,CAAMC,UAAU,UAAUC,MAAM,YAC9BJ,EAAA9C,EAAA+C,cAACI,EAAA,EAAD,CAAMC,SAAUT,KAAKhC,cAEnBmC,EAAA9C,EAAA+C,cAAC5D,EAAD6C,OAAAqB,OAAA,GA1BiB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAmBV,CAA8BG,MAAOb,EAAA9C,EAAA+C,cAAA,sBAClCF,EAAkB,OAAQ,CACzBe,MAAO,CACL,CACEC,UAAU,EACVrC,QAAS,0BACTsC,YAAY,KALjBjB,CASCC,EAAA9C,EAAA+C,cAACgB,EAAA,EAAD,KACGpE,EAAMqE,QACFrE,EAAMsE,IAAI,SAAA5C,GAAI,OACfyB,EAAA9C,EAAA+C,cAACzD,EAAD,CAAQ4E,IAAK7C,EAAKF,GAAIgD,MAAK,GAAAC,OAAK/C,EAAKF,KAClCE,EAAK6B,YAMlBJ,EAAA9C,EAAA+C,cAAC5D,EApCoB,CACzBuE,WAAY,CACVH,GAAI,CACFC,KAAM,GACNa,OAAQ,GAEVZ,GAAI,CACFD,KAAM,GACNa,OAAQ,KA6BNvB,EAAA9C,EAAA+C,cAACuB,EAAA,EAAD,CAAQC,KAAK,UAAUC,SAAS,UAAhC,cAKJ1B,EAAA9C,EAAA+C,cAAC0B,EAAA,sBAAD,cA5FmBC,aAkGrBC,EAAmBvF,IAAKwF,QAALxF,CAAcI,GACxBmF","file":"static/js/49.0dc201b4.chunk.js","sourcesContent":["/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Select,\r\n} from 'antd';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport {\r\n  NotificationManager,\r\n  NotificationContainer,\r\n} from 'react-notifications';\r\n\r\nconst FormItem = Form.Item;\r\nconst { Option } = Select;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    categories: [],\r\n    posts: [],\r\n  };\r\n\r\n\r\n  componentDidMount = async () => {\r\n    const posts = await axios.get('/api/v2/noheading');\r\n    const { data } = posts;\r\n    this.setState({ posts: data });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        const { Hero: id } = values;\r\n        axios.post('/api/v2/heading', { data: { id } }).then((result) => {\r\n          const {\r\n            data: { message },\r\n          } = result;\r\n          NotificationManager.success(message, 'SUCCESS', 2000);\r\n          setTimeout(() => {\r\n            this.props.history.push('/admin/hero/view');\r\n          }, 3000);\r\n        }).catch(async (error) => {\r\n          const { data: { message }, statusText } = error.response;\r\n          NotificationManager.error(message || statusText);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const {\r\n      posts,\r\n    } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Add Post\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          <FormItem {...formItemLayout} label={<span>Hero</span>}>\r\n            {getFieldDecorator('Hero', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input Hero name!',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(\r\n              <Select>\r\n                {posts.length\r\n                  && posts.map(post => (\r\n                    <Option key={post.id} value={`${post.id}`}>\r\n                      {post.title}\r\n                    </Option>\r\n                  ))}\r\n              </Select>,\r\n            )}\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Add Post\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n        <NotificationContainer />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default RegistrationForm;\r\n"],"sourceRoot":""}