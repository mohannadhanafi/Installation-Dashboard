{"version":3,"sources":["routes/Posts/AddPost/index.jsx"],"names":["FormItem","Form","Item","Option","Select","TextArea","Input","Registration","state","confirmDirty","autoCompleteResult","fileList","previewVisible","previewImage","tags","inputVisible","categories","fileName","content","removedFile","heroLength","inputValue","mode","breaking","handleCancel","_this","setState","handleOpenChange","open","onChangeCheckBreaking","e","target","checked","handlePanelChange","value","componentDidMount","_callee","allCategories","heading","data","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","wrap","_context","prev","next","axios","get","sent","length","stop","handleSubmit","preventDefault","props","form","validateFieldsAndScroll","err","values","_this$state","files","map","push","response","fullName","trim","description","header_media","post","then","result","message","newsLetter","NotificationManager","success","setTimeout","history","_ref2","Object","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","mark","_callee2","file","_context2","pic","_x","apply","this","arguments","catch","_ref3","_callee3","error","_error$response","statusText","_context3","_x2","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","domain","concat","handleEditorChange","getContent","onEditorStateChange","editorState","handlePreview","url","thumbUrl","removeFile","_callee4","_context4","handleChange","_ref5","isJPG","type","isPNG","isLt2M","size","status","showInput","input","focus","handleClose","removedTag","filter","tag","saveInputRef","handleInputChange","handleInputConfirm","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","indexOf","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","newContent","evt","editor","getData","_this2","getFieldDecorator","role","_this$state2","uploadButton","react__WEBPACK_IMPORTED_MODULE_9___default","createElement","antd__WEBPACK_IMPORTED_MODULE_14__","className","formItemLayout","labelCol","xs","span","sm","wrapperCol","antd__WEBPACK_IMPORTED_MODULE_15__","title","antd__WEBPACK_IMPORTED_MODULE_11__","onSubmit","assign","label","antd__WEBPACK_IMPORTED_MODULE_16__","rules","required","whitespace","antd__WEBPACK_IMPORTED_MODULE_13__","max","rows","antd__WEBPACK_IMPORTED_MODULE_12__","cat","key","id","name","Fragment","antd__WEBPACK_IMPORTED_MODULE_17__","action","listType","onPreview","onChange","onRemove","antd__WEBPACK_IMPORTED_MODULE_18__","visible","footer","onCancel","alt","style","width","src","index","isLongTag","tagElem","antd__WEBPACK_IMPORTED_MODULE_19__","closable","afterClose","slice","ref","onBlur","onPressEnter","onClick","background","borderStyle","_tinymce_tinymce_react__WEBPACK_IMPORTED_MODULE_26__","init","images_upload_url","images_upload_base_path","image_caption","images_upload_handler","blobInfo","failure","formData","FormData","append","blob","height","image_title","automatic_uploads","file_picker_types","images_upload_credentials","plugins","toolbar","antd__WEBPACK_IMPORTED_MODULE_20__","color","antd__WEBPACK_IMPORTED_MODULE_21__","showTime","onOpenChange","onPanelChange","disabledDate","current","moment","endOf","offset","antd__WEBPACK_IMPORTED_MODULE_22__","htmlType","react_notifications__WEBPACK_IMPORTED_MODULE_25__","Component","RegistrationForm","create","connect","_ref6","auth","authUser"],"mappings":"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","file":"static/js/90.a4f1fc0c.chunk.js","sourcesContent":["/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  Tooltip,\r\n  Upload,\r\n  Modal,\r\n  Checkbox,\r\n  DatePicker,\r\n  Tag,\r\n} from 'antd';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  NotificationManager,\r\n  NotificationContainer,\r\n} from 'react-notifications';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport moment from 'moment';\r\n\r\nconst FormItem = Form.Item;\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n    fileList: [],\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    tags: [],\r\n    inputVisible: false,\r\n    categories: [],\r\n    fileName: '',\r\n    content: '',\r\n    removedFile: [],\r\n    heroLength: '',\r\n    inputValue: '',\r\n    mode: 'time',\r\n    breaking: false,\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handleOpenChange = (open) => {\r\n    if (open) {\r\n      this.setState({ mode: 'time' });\r\n    }\r\n  }\r\n\r\n  onChangeCheckBreaking = (e) => {\r\n    const breaking = e.target.checked;\r\n    this.setState(() => ({ breaking }));\r\n  }\r\n\r\n  handlePanelChange = (value, mode) => {\r\n    this.setState({ mode });\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const allCategories = await axios.get('/api/v2/categories');\r\n    const heading = await axios.get('/api/v2/heading');\r\n    const { data } = heading;\r\n\r\n    const { data: categories } = allCategories;\r\n    this.setState({ categories, heroLength: data.length });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        const { fileList, removedFile, tags } = this.state;\r\n        const files = [];\r\n        fileList.map((value) => {\r\n          files.push(value.response.fullName);\r\n          return files;\r\n        });\r\n        if (files.length !== 0) {\r\n          const { content } = this.state;\r\n          if (content.trim()) {\r\n            values.description = content;\r\n            values.header_media = files;\r\n            values.tags = tags;\r\n            axios\r\n              .post('/api/v2/post', values)\r\n              .then((result) => {\r\n                const {\r\n                  data: { message },\r\n                } = result;\r\n                if (values.newsLetter) {\r\n                  NotificationManager.success(\r\n                    'Post has been added, redirect to email list',\r\n                    'SUCCESS',\r\n                    2000,\r\n                  );\r\n                } else {\r\n                  NotificationManager.success(message, 'SUCCESS', 2000);\r\n                  setTimeout(() => {\r\n                    this.props.history.push('/admin/Posts/viewPosts/all');\r\n                  }, 3000);\r\n                }\r\n                if (removedFile.length) {\r\n                  removedFile.map(async (file) => {\r\n                    await axios.post('/api/v2/files/removeFile', { pic: file });\r\n                  });\r\n                }\r\n              })\r\n              .catch(async (error) => {\r\n                const {\r\n                  data: { message },\r\n                  statusText,\r\n                } = error.response;\r\n                NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n              });\r\n          } else {\r\n            NotificationManager.error(\r\n              'Please Add details for the post',\r\n              'ERROR',\r\n              2000,\r\n            );\r\n          }\r\n        } else {\r\n          NotificationManager.error(\r\n            'Please Choose image or video !',\r\n            'ERROR',\r\n            2000,\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = (e) => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  handleWebsiteChange = (value) => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(\r\n        domain => `${value}${domain}`,\r\n      );\r\n    }\r\n    this.setState({ autoCompleteResult });\r\n  };\r\n\r\n  handleEditorChange = (e) => {\r\n    const content = e.target.getContent();\r\n    this.setState(() => ({ content }));\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  removeFile = async (file) => {\r\n    const { removedFile } = this.state;\r\n    const {\r\n      response: { fullName },\r\n    } = file;\r\n    removedFile.push(fullName);\r\n    this.setState({ removedFile });\r\n  };\r\n\r\n  handleChange = ({ file, fileList }) => {\r\n    const isJPG = file.type === 'image/jpeg';\r\n    const isPNG = file.type === 'image/png';\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isJPG && !isPNG) {\r\n      NotificationManager.error(\r\n        'You can only upload image files!',\r\n        'ERROR',\r\n        2000,\r\n      );\r\n    } else if (!isLt2M) {\r\n      NotificationManager.error('Image must smaller than 2MB!', 'ERROR', 2000);\r\n    } else {\r\n      this.setState({ fileList });\r\n      const { status } = file;\r\n      if (status === 'done') {\r\n        const {\r\n          response: { fullName },\r\n        } = file;\r\n        this.setState({ fileName: fullName });\r\n      }\r\n    }\r\n  };\r\n\r\n  updateContent(newContent) {\r\n    this.setState({\r\n      content: newContent,\r\n    });\r\n  }\r\n\r\n  editorChange(evt) {\r\n    const newContent = evt.editor.getData();\r\n    this.setState({\r\n      content: newContent,\r\n    });\r\n  }\r\n\r\n  onBlur(evt) {}\r\n\r\n  afterPaste(evt) {}\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleClose = (removedTag) => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  saveInputRef = input => (this.input = input);\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { state } = this;\r\n    const { inputValue } = state;\r\n    let { tags } = state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { role } = this.props;\r\n    const {\r\n      previewVisible,\r\n      fileList,\r\n      previewImage,\r\n      categories,\r\n      heroLength,\r\n      tags,\r\n      inputVisible,\r\n      inputValue,\r\n      breaking,\r\n    } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const descriptionItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Add Post\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label={(\r\n              <span>\r\n                Title&nbsp;\r\n                <Tooltip title=\"What is the title of the post\">\r\n                  <Icon type=\"question-circle-o\" />\r\n                </Tooltip>\r\n              </span>\r\n)}\r\n          >\r\n            {getFieldDecorator('title', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your title!',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Seo name</span>}>\r\n            {getFieldDecorator('seo', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your seo!',\r\n                  whitespace: true,\r\n                },\r\n                {\r\n                  max: 20,\r\n                  message: 'Max Letters for Seo is 20',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Post Introduction</span>}>\r\n            {getFieldDecorator('post_intro', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your intro!',\r\n                  whitespace: true,\r\n                },\r\n                {\r\n                  max: 260,\r\n                  message: 'Max Letters for Intro is 260',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(<TextArea rows={4} />)}\r\n          </FormItem>\r\n\r\n          <FormItem {...formItemLayout} label={<span>Category</span>}>\r\n            {getFieldDecorator('category', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input category name!',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(\r\n              <Select>\r\n                {categories.length\r\n                  && categories.map(cat => (\r\n                    <Option key={cat.id} value={`${cat.id}`}>\r\n                      {cat.name}\r\n                    </Option>\r\n                  ))}\r\n              </Select>,\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label={<span>Upload Header Photo</span>}\r\n          >\r\n            <>\r\n              <Upload\r\n                action=\"/api/v2/files/uploadFile\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onPreview={this.handlePreview}\r\n                onChange={this.handleChange}\r\n                onRemove={this.removeFile}\r\n              >\r\n                {fileList.length >= 5 ? null : uploadButton}\r\n              </Upload>\r\n              <Modal\r\n                visible={previewVisible}\r\n                footer={null}\r\n                onCancel={this.handleCancel}\r\n              >\r\n                <img\r\n                  alt=\"example\"\r\n                  style={{ width: '100%' }}\r\n                  src={previewImage}\r\n                />\r\n              </Modal>\r\n            </>\r\n            ,\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label=\"Meta tags\">\r\n            <div>\r\n              {tags.map((tag, index) => {\r\n                const isLongTag = tag.length > 20;\r\n                const tagElem = (\r\n                  <Tag\r\n                    key={tag}\r\n                    closable\r\n                    afterClose={() => this.handleClose(tag)}\r\n                  >\r\n                    {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                  </Tag>\r\n                );\r\n                return isLongTag ? (\r\n                  <Tooltip title={tag} key={tag}>\r\n                    {tagElem}\r\n                  </Tooltip>\r\n                ) : (\r\n                  tagElem\r\n                );\r\n              })}\r\n              {inputVisible && (\r\n                <Input\r\n                  ref={this.saveInputRef}\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                  style={{ width: 78 }}\r\n                  value={inputValue}\r\n                  onChange={this.handleInputChange}\r\n                  onBlur={this.handleInputConfirm}\r\n                  onPressEnter={this.handleInputConfirm}\r\n                />\r\n              )}\r\n              {!inputVisible && (\r\n                <Tag\r\n                  onClick={this.showInput}\r\n                  style={{ background: '#fff', borderStyle: 'dashed' }}\r\n                >\r\n                  <Icon type=\"plus\" /> New Tag\r\n                </Tag>\r\n              )}\r\n            </div>\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label={<span>Description</span>}>\r\n            <Editor\r\n              init={{\r\n                images_upload_url: '/api/v2/files/uploadFile',\r\n\r\n                images_upload_base_path: '/api/v2/files/uploadFile',\r\n                image_caption: true,\r\n\r\n                images_upload_handler: (blobInfo, success, failure) => {\r\n                  const formData = new FormData();\r\n                  formData.append('file', blobInfo.blob());\r\n                  axios.post('/api/v2/files/uploadFile', formData).then((result) => {\r\n                    const { data: { fullName } } = result;\r\n                    success(`/api/v2/files/getFile/${fullName}`);\r\n                  }).catch((error) => {\r\n                    failure('error !');\r\n                  });\r\n                },\r\n                height: 700,\r\n                image_title: true,\r\n                automatic_uploads: true,\r\n                file_picker_types: 'file image media',\r\n                images_upload_credentials: true,\r\n                plugins: 'print preview fullpage powerpaste searchreplace autolink directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount tinymcespellchecker a11ychecker imagetools textpattern help formatpainter permanentpen pageembed mentions linkchecker',\r\n                toolbar: 'formatselect | bold italic strikethrough forecolor backcolor permanentpen formatpainter | link image media pageembed | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent | removeformat | addcomment',\r\n              }}\r\n              onChange={this.handleEditorChange}\r\n      />\r\n            ,\r\n          </FormItem>\r\n          {role === 'admin' ? (\r\n            heroLength < 4 ? (\r\n              <FormItem {...formItemLayout} label={<span>Hero Section</span>}>\r\n                {getFieldDecorator('hero')(\r\n                  <Checkbox>\r\n                    Do you want to view this post in the hero section\r\n                  </Checkbox>,\r\n                )}\r\n              </FormItem>\r\n            ) : (\r\n              <FormItem {...formItemLayout} label={<span>Hero Section</span>}>\r\n                <span style={{ color: 'red' }}>\r\n                  You can only put 4 posts in Hero Section\r\n                </span>\r\n              </FormItem>\r\n            )\r\n          ) : null}\r\n          <FormItem {...formItemLayout} label={<span>Breaking News</span>}>\r\n            {getFieldDecorator('breaking')(\r\n              <Checkbox onChange={this.onChangeCheckBreaking}>\r\n                Do you want to consider this post as a breaking news ?\r\n              </Checkbox>,\r\n\r\n            )}\r\n          </FormItem>\r\n\r\n          {breaking ? (\r\n            <FormItem {...formItemLayout} label={<span>End Date/Time</span>}>\r\n              {getFieldDecorator('breakingEnd')(\r\n                <DatePicker\r\n                  mode={this.state.mode}\r\n                  showTime\r\n                  onOpenChange={this.handleOpenChange}\r\n                  onPanelChange={this.handlePanelChange}\r\n                  disabledDate={current => current < moment().endOf('tommorow')}\r\n\r\n   />,\r\n              )}\r\n            </FormItem>\r\n          ) : null}\r\n          <FormItem {...formItemLayout} label={<span>News Letter</span>}>\r\n            {getFieldDecorator('newsLetter')(\r\n              <Checkbox>\r\n                Send This news to mail list\r\n              </Checkbox>,\r\n            )}\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Add Post\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n        <NotificationContainer />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ auth }) => {\r\n  const { authUser, url, role } = auth;\r\n  return {\r\n    authUser,\r\n    url,\r\n    role,\r\n  };\r\n};\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default connect(mapStateToProps)(RegistrationForm);\r\n"],"sourceRoot":""}