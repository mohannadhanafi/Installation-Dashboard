{"version":3,"sources":["routes/Testimonials/Add/index.jsx"],"names":["TextArea","Input","FormItem","Form","Item","Registration","state","footer_description","mobile","email","logo","copyrighrs","previewVisible","previewImage","fileList","inputVisible","fileName","pic","removedFile","disable","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","_this$state","setState","axios","post","then","result","message","data","statusText","status","NotificationManager","success","setTimeout","history","push","error","catch","loading","_error$response","response","errorMessage","statusMessage","handleCancel","handlePreview","file","url","thumbUrl","removeFile","_callee","urlSplit","fullName","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","split","length","stop","handleChange","_ref2","getFieldDecorator","this","_this$state2","formItemLayout","labelCol","xs","span","sm","wrapperCol","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","antd__WEBPACK_IMPORTED_MODULE_10__","type","className","antd__WEBPACK_IMPORTED_MODULE_11__","title","antd__WEBPACK_IMPORTED_MODULE_9__","onSubmit","Object","assign","label","rules","required","antd__WEBPACK_IMPORTED_MODULE_8__","max","rows","offset","antd__WEBPACK_IMPORTED_MODULE_12__","disabled","htmlType","react_notifications__WEBPACK_IMPORTED_MODULE_15__","Component","RegistrationForm","create"],"mappings":"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","file":"static/js/52.653ad246.chunk.js","sourcesContent":["/* eslint-disable camelcase */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Button, Card, Form, Input, Icon, Upload, Modal,\r\n} from 'antd';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\n\r\nconst { TextArea } = Input;\r\nconst FormItem = Form.Item;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    footer_description: '',\r\n    mobile: '',\r\n    email: '',\r\n    logo: '',\r\n    copyrighrs: '',\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    fileList: [],\r\n    inputVisible: false,\r\n    fileName: '',\r\n    pic: 'noPic.jpg',\r\n    removedFile: [],\r\n    disable: false \r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      const { fileList, fileName } = this.state;\r\n      if (!err) {\r\n        this.setState({ disable: true });\r\n        axios\r\n          .post('/api/v2/testimonials', values)\r\n          .then((result) => {\r\n            const {\r\n              data: { message },\r\n              statusText,\r\n            } = result;\r\n            if (result.status === 200) {\r\n              NotificationManager.success(message, 'SUCCESS', 2000);\r\n              setTimeout(() => {\r\n                this.props.history.push('/admin/testimonials/view');\r\n                this.setState({ disable: false });\r\n              }, 3000);\r\n            } else {\r\n              NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 2000);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({ loading: false }, () => {\r\n              const {\r\n                data: { message: errorMessage },\r\n                statusText: statusMessage,\r\n              } = error.response;\r\n              NotificationManager.error(errorMessage || statusMessage, 'ERROR', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 2000);\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  removeFile = async (file) => {\r\n    const { removedFile } = this.state;\r\n    const { url } = file;\r\n    if (url) {\r\n      const urlSplit = url.split('/');\r\n      const fileName = urlSplit[urlSplit.length - 1];\r\n      removedFile.push(fileName);\r\n    } else {\r\n      const {\r\n        response: { fullName },\r\n      } = file;\r\n\r\n      removedFile.push(fullName);\r\n    }\r\n    this.setState({ removedFile });\r\n  };\r\n\r\n  handleChange = ({ file, fileList }) => {\r\n    this.setState({ fileList });\r\n    const { status } = file;\r\n    if (status === 'done') {\r\n      const {\r\n        response: { fullName },\r\n      } = file;\r\n      this.setState({ fileName: fullName });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { fileList, previewVisible, pic ,disable} = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Add Testimonial\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem {...formItemLayout} label={<span>Name</span>}>\r\n            {getFieldDecorator('name', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter the name !',\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Job Title</span>}>\r\n            {getFieldDecorator('jobTitle', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter the name !',\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Description</span>}>\r\n            {getFieldDecorator('description', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter the name !',\r\n                },\r\n                {\r\n                  max: 450,\r\n                  message: 'Max is 450 letter !',\r\n                },\r\n              ],\r\n            })(<TextArea rows={4} />)}\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n          {!disable\r\n              ? (\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n                </Button>\r\n              )\r\n              : (\r\n                <Button type=\"primary\" disabled htmlType=\"submit\">\r\n         Submit\r\n                </Button>\r\n              ) }\r\n          </FormItem>\r\n        </Form>\r\n        <NotificationContainer />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default RegistrationForm;\r\n"],"sourceRoot":""}