{"version":3,"sources":["routes/Teams/Settings/index.jsx"],"names":["FormItem","Form","Item","TextArea","Input","Registration","state","teamtitle","teamsub","teamdesc","disable","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","setState","axios","post","then","result","message","data","NotificationManager","success","setTimeout","history","push","catch","_ref","Object","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","error","_error$response","statusText","wrap","_context","prev","next","response","stop","_x","apply","this","arguments","componentDidMount","get","_data$","getFieldDecorator","_this$state","formItemLayout","labelCol","xs","span","sm","wrapperCol","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","antd__WEBPACK_IMPORTED_MODULE_10__","className","title","antd__WEBPACK_IMPORTED_MODULE_8__","onSubmit","assign","label","initialValue","rules","required","whitespace","max","antd__WEBPACK_IMPORTED_MODULE_9__","offset","antd__WEBPACK_IMPORTED_MODULE_11__","type","disabled","htmlType","react_notifications__WEBPACK_IMPORTED_MODULE_13__","Component","RegistrationForm","create"],"mappings":"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","file":"static/js/100.93e30ee1.chunk.js","sourcesContent":["/* eslint-disable camelcase */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Input,\r\n} from 'antd';\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    teamtitle: '',\r\n    teamsub: '',\r\n    teamdesc: '',\r\n    disable: false,\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.setState({ disable: true });\r\n        axios\r\n          .post('/api/v2/titles', values)\r\n          .then((result) => {\r\n            const {\r\n              data: { message },\r\n            } = result;\r\n            NotificationManager.success(message, 'SUCCESS', 2000);\r\n            setTimeout(() => {\r\n              this.props.history.push('/admin/teams/settings');\r\n              this.setState({ disable: false });\r\n            }, 3000);\r\n          })\r\n          .catch(async (error) => {\r\n            const {\r\n              data: { message },\r\n              statusText,\r\n            } = error.response;\r\n            NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n            setTimeout(() => {\r\n              this.setState({ disable: false });\r\n            }, 2000);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    axios.get('/api/v2/titles').then((result) => {\r\n      const { data } = result;\r\n      const { teamtitle, teamsub, teamdesc } = data[0];\r\n      this.setState(() => ({ teamtitle, teamsub, teamdesc }));\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const {\r\n      teamtitle, teamsub, teamdesc, disable,\r\n    } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Setting\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem {...formItemLayout} label={<span>Title</span>}>\r\n            {getFieldDecorator('teamtitle', {\r\n              initialValue: teamtitle,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input the title!',\r\n                  whitespace: true,\r\n                }, {\r\n                  max: 20,\r\n                  message: 'Max is 20 letter',\r\n\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>subtitle</span>}>\r\n            {getFieldDecorator('teamsub', {\r\n              initialValue: teamsub,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input the subtitle!',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(<TextArea />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Description</span>}>\r\n            {getFieldDecorator('teamdesc', {\r\n              initialValue: teamdesc,\r\n            })(<TextArea />)}\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n            {!disable\r\n              ? (\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n              </Button>\r\n              )\r\n              : (\r\n              <Button type=\"primary\" disabled htmlType=\"submit\">\r\n         Submit\r\n              </Button>\r\n              ) }\r\n          </FormItem>\r\n        </Form>\r\n        <NotificationContainer />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default RegistrationForm;\r\n"],"sourceRoot":""}