{"version":3,"sources":["routes/Options/NewsLetter/index.jsx"],"names":["Dynamic","state","data","columns","delete","id","axios","then","res","message","statusText","status","final","_this","items","filter","element","setState","NotificationManager","success","error","catch","_error$response","response","errorMessage","errorText","clearFilters","filteredInfo","componentWillMount","get","result","title","dataIndex","key","sorter","a","b","email","length","onChange","event","_event$target","target","name","value","Object","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","list","item","props","children","toLowerCase","indexOf","_this$state","this","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","antd__WEBPACK_IMPORTED_MODULE_10__","antd__WEBPACK_IMPORTED_MODULE_11__","assign","className","dataSource","react_notifications__WEBPACK_IMPORTED_MODULE_12__","React","Component","connect","_ref","role","auth"],"mappings":"qOA0BMA,6MACJC,MAAQ,CACNC,KAAM,GACNC,QAAS,MAGXC,OAAS,SAACC,GACRC,IACGF,OAAO,uBAAwB,CAAEF,KAAM,CAAEG,QACzCE,KAAK,SAACC,GAAQ,IAEHC,EAEND,EAFFN,KAAQO,QACRC,EACEF,EADFE,WAEF,GAAmB,MAAfF,EAAIG,OAAgB,KAEhBC,EADYC,EAAKZ,MAAfa,MACYC,OAAO,SAAAC,GAAO,OAAIA,EAAQX,KAAOA,IACrDQ,EAAKI,SACH,iBAAO,CAAEH,MAAOF,IAChB,WACEM,sBAAoBC,QAAQV,EAAS,UAAW,YAIpDS,sBAAoBE,MAAMX,GAAWC,EAAY,QAAS,OAG7DW,MAAM,SAACD,GAAU,IAAAE,EAIZF,EAAMG,SAFSC,EAFHF,EAEdpB,KAAQO,QACIgB,EAHEH,EAGdZ,WAEFQ,sBAAoBE,MAAMI,GAAgBC,EAAW,QAAS,UAIpEC,aAAe,WACbb,EAAKI,SAAS,CAAEU,aAAc,UAGhCC,mBAAqB,WACnBtB,IAAMuB,IAAI,uBAAuBtB,KAAK,SAACuB,GAAW,IACxC5B,EAAS4B,EAAT5B,KASRW,EAAKI,SAAS,CAAEd,QARA,CACd,CACE4B,MAAO,QACPC,UAAW,QACXC,IAAK,QACLC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,MAAMC,OAASF,EAAEC,MAAMC,UAGtBxB,MAAOZ,SAIpCqC,SAAW,SAACC,GAAU,IAAAC,EACID,EAAME,OAAtBC,EADYF,EACZE,KAAMC,EADMH,EACNG,MACd/B,EAAKI,SAAL4B,OAAAC,EAAA,EAAAD,CAAA,GAAiBF,EAAOC,IAFJ,IAIhBG,EADalC,EAAKZ,MAAdC,KAMY,KAJpB6C,EAAOA,EAAKhC,OACV,SAAAiC,GAAI,OAAiF,IAA7EA,EAAKjB,MAAMkB,MAAMC,SAAS,GAAGC,cAAcC,QAAQR,EAAMO,kBAG1Db,OACPzB,EAAKI,SAAS,CAAEH,MAAOiC,IAEvBlC,EAAKI,SAAS,CAAEH,MAAO,gFAIlB,IAAAuC,EACoBC,KAAKrD,MAAxBE,EADDkD,EACClD,QAASW,EADVuC,EACUvC,MACjB,OACEyC,EAAApB,EAAAqB,cAACC,EAAA,EAAD,CAAM1B,MAAM,cACVwB,EAAApB,EAAAqB,cAACE,EAAA,EAADb,OAAAc,OAAA,CACEC,UAAU,uBACNN,KAAKrD,MAFX,CAGEE,QAASA,EACT0D,WAAY/C,KAEdyC,EAAApB,EAAAqB,cAACM,EAAA,sBAAD,cAjFcC,IAAMC,WA4FbC,sBANS,SAAAC,GAEtB,MAAO,CACLC,KAHkCD,EAAXE,KACjBD,OAKKF,CAAyBjE","file":"static/js/60.2a460459.chunk.js","sourcesContent":["/* eslint-disable no-return-assign */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Card,\r\n  Divider,\r\n  Table,\r\n  Popconfirm,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Icon,\r\n} from 'antd';\r\nimport {\r\n  NotificationManager,\r\n  NotificationContainer,\r\n} from 'react-notifications';\r\n\r\nclass Dynamic extends React.Component {\r\n  state = {\r\n    data: [],\r\n    columns: [],\r\n  };\r\n\r\n  delete = (id) => {\r\n    axios\r\n      .delete('/api/v2/posts/delete', { data: { id } })\r\n      .then((res) => {\r\n        const {\r\n          data: { message },\r\n          statusText,\r\n        } = res;\r\n        if (res.status === 200) {\r\n          const { items } = this.state;\r\n          const final = items.filter(element => element.id !== id);\r\n          this.setState(\r\n            () => ({ items: final }),\r\n            () => {\r\n              NotificationManager.success(message, 'SUCCESS', 2000);\r\n            },\r\n          );\r\n        } else {\r\n          NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        const {\r\n          data: { message: errorMessage },\r\n          statusText: errorText,\r\n        } = error.response;\r\n        NotificationManager.error(errorMessage || errorText, 'ERROR', 2000);\r\n      });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    axios.get('/api/v2/newsletters').then((result) => {\r\n      const { data } = result;\r\n      const columns = [\r\n        {\r\n          title: 'Email',\r\n          dataIndex: 'email',\r\n          key: 'email',\r\n          sorter: (a, b) => a.email.length - b.email.length,\r\n        },\r\n      ];\r\n      this.setState({ columns, items: data });\r\n    });\r\n  };\r\n\r\n  onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n    const { data } = this.state;\r\n    let list = data;\r\n    list = list.filter(\r\n      item => item.title.props.children[0].toLowerCase().indexOf(value.toLowerCase()) !== -1,\r\n    );\r\n\r\n    if (list.length !== 0) {\r\n      this.setState({ items: list });\r\n    } else {\r\n      this.setState({ items: null });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { columns, items } = this.state;\r\n    return (\r\n      <Card title=\"NewsLetter\">\r\n        <Table\r\n          className=\"gx-table-responsive\"\r\n          {...this.state}\r\n          columns={columns}\r\n          dataSource={items}\r\n        />\r\n        <NotificationContainer />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ auth }) => {\r\n  const { role } = auth;\r\n  return {\r\n    role,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Dynamic);\r\n"],"sourceRoot":""}