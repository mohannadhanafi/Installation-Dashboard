{"version":3,"sources":["routes/services.1/EditCore/index.jsx"],"names":["FormItem","Form","Item","TextArea","Input","Registration","state","title","desc","icon","content","fileList","removedFile","fileName","disable","componentDidMount","_callee","id","result","data","_data$","body","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","_this","props","match","params","axios","concat","sent","get","then","push","uid","uuid","name","status","url","catch","error","setState","stop","handleEditorChange","e","target","getContent","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","_this$state","length","post","message","statusText","loading","NotificationManager","success","setTimeout","history","map","_ref2","Object","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee2","file","_context2","pic","_x","apply","this","arguments","_error$response","response","showPickedIcon","handlePreview","previewImage","thumbUrl","previewVisible","removeFile","_callee3","urlSplit","fullName","_context3","split","handleChange","_ref4","isSvg","type","isPNG","getFieldDecorator","_this$state2","uploadButton","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","antd__WEBPACK_IMPORTED_MODULE_10__","className","formItemLayout","labelCol","xs","span","sm","wrapperCol","antd__WEBPACK_IMPORTED_MODULE_11__","antd__WEBPACK_IMPORTED_MODULE_8__","onSubmit","assign","label","Fragment","antd__WEBPACK_IMPORTED_MODULE_12__","action","listType","onPreview","onChange","onRemove","accept","antd__WEBPACK_IMPORTED_MODULE_13__","visible","footer","onCancel","handleCancel","alt","style","width","src","initialValue","rules","max","antd__WEBPACK_IMPORTED_MODULE_9__","offset","antd__WEBPACK_IMPORTED_MODULE_14__","disabled","htmlType","react_notifications__WEBPACK_IMPORTED_MODULE_19__","Component","RegistrationForm","create"],"mappings":"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","file":"static/js/106.b495837d.chunk.js","sourcesContent":["/* eslint-disable camelcase */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Upload,\r\n  Modal,\r\n  Icon,\r\n} from 'antd';\r\nimport uuid from 'uuid';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport MaterialUiIconPicker from 'react-material-ui-icon-picker';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport ClearFix from 'material-ui/internal/ClearFix';\r\n\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    title: 'ss',\r\n    desc: 'qq',\r\n    icon: '',\r\n    content: '',\r\n    fileList: [],\r\n    removedFile: [],\r\n    fileName: '',\r\n    disable: false,\r\n\r\n  };\r\n\r\n\r\ncomponentDidMount = async () => {\r\n  const {\r\n    match: {\r\n      params: { id },\r\n    },\r\n  } = this.props;\r\n  const result = await axios(`/api/v2/core/${id}`);\r\n  const { data } = result;\r\n  const {\r\n    title, desc, icon, body,\r\n  } = data[0];\r\n  const fileList = [];\r\n  if (icon !== '') {\r\n    await axios\r\n      .get(`/api/v2/files/getFile/${icon}`)\r\n      .then(result => fileList.push({\r\n        uid: uuid(),\r\n        name: 'image.png',\r\n        status: 'done',\r\n        url: `/api/v2/files/getFile/${icon}`,\r\n      }))\r\n      .catch((error) => {});\r\n  }\r\n  this.setState({\r\n    title, desc, icon, content: body, fileList,\r\n  });\r\n}\r\n\r\nhandleEditorChange = (e) => {\r\n  const content = e.target.getContent();\r\n  this.setState(() => ({ content }));\r\n}\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.setState({ disable: true });\r\n        const {\r\n          icon, content, removedFile, fileList, fileName,\r\n        } = this.state;\r\n        if (fileName !== '') {\r\n          values.icon = fileName;\r\n        }\r\n        values.body = content;\r\n        const {\r\n          match: {\r\n            params: { id },\r\n          },\r\n        } = this.props;\r\n        if (fileList.length) {\r\n          axios.post('/api/v2/core/updateCore', {\r\n            data: values,\r\n            params: { id },\r\n          }).then((result) => {\r\n            const {\r\n              data: { message },\r\n              statusText,\r\n              status,\r\n            } = result;\r\n            if (status === 200) {\r\n              this.setState({ loading: false }, () => {\r\n                NotificationManager.success(message, 'SUCCESS', 2000);\r\n                setTimeout(() => {\r\n                  this.props.history.push('/admin/core/viewcore');\r\n                  this.setState({ disable: false });\r\n                }, 3000);\r\n                if (removedFile.length) {\r\n                  removedFile.map(async (file) => {\r\n                    await axios.post('/api/v2/files/removeFile', { pic: file });\r\n                  });\r\n                }\r\n              });\r\n            } else {\r\n              this.setState({ loading: false }, () => {\r\n                NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n                setTimeout(() => {\r\n                  this.setState({ disable: false });\r\n                }, 2000);\r\n              });\r\n            }\r\n          }).catch((error) => {\r\n            this.setState({ loading: false }, () => {\r\n              const {\r\n                data: { message },\r\n                statusText,\r\n              } = error.response;\r\n              NotificationManager.error(message || statusText, 'ERRRO', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 2000);\r\n            });\r\n          });\r\n        } else {\r\n          NotificationManager.error('Please Choose an image !', 'ERROR', 2000);\r\n          setTimeout(() => {\r\n            this.setState({ disable: false });\r\n          }, 2000);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  showPickedIcon = (icon) => {\r\n    const { name } = icon;\r\n    this.setState({ icon: name });\r\n  }\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  removeFile = async (file) => {\r\n    const { removedFile } = this.state;\r\n    const { url } = file;\r\n    if (url) {\r\n      const urlSplit = url.split('/');\r\n      const fileName = urlSplit[urlSplit.length - 1];\r\n      removedFile.push(fileName);\r\n    } else {\r\n      const { response: { fullName } } = file;\r\n      removedFile.push(fullName);\r\n    }\r\n    this.setState({ removedFile });\r\n  };\r\n\r\n  handleChange = ({ file, fileList }) => {\r\n    this.setState({ fileList });\r\n    if (fileList.length) {\r\n      const { status } = file;\r\n      const isSvg = file.type === 'image/svg+xml';\r\n      const isPNG = file.type === 'image/png';\r\n      if (!isSvg && !isPNG) {\r\n        this.setState({ fileList });\r\n        NotificationManager.error(\r\n          'You can only upload svg files!',\r\n          'ERROR',\r\n          2000,\r\n        );\r\n        this.setState(() => ({ fileList: [] }));\r\n      } else if (status === 'done') {\r\n        const {\r\n          response: { fullName },\r\n        } = file;\r\n        this.setState({ fileName: fullName });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const {\r\n      title, desc, icon, content, fileList, previewVisible, disable,\r\n    } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Edit Core\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label={<span>Icon</span>}\r\n          >\r\n            <>\r\n              <Upload\r\n                action=\"/api/v2/files/uploadFile\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onPreview={this.handlePreview}\r\n                onChange={this.handleChange}\r\n                onRemove={this.removeFile}\r\n                accept=\"image/png, image/svg+xml\"\r\n              >\r\n                {fileList.length === 1 ? null : uploadButton}\r\n              </Upload>\r\n              <Modal\r\n                visible={previewVisible}\r\n                footer={null}\r\n                onCancel={this.handleCancel}\r\n              >\r\n                <img\r\n                  alt=\"example\"\r\n                  style={{ width: '100%' }}\r\n                  src={`/api/v2/files/getFile/${icon}`}\r\n                />\r\n              </Modal>\r\n            </>\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Title</span>}>\r\n            {getFieldDecorator('title', {\r\n              initialValue: title || null,\r\n              rules: [\r\n                {\r\n                  max: 30,\r\n                  message: 'Max is 30 letter',\r\n\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Description</span>}>\r\n            {getFieldDecorator('desc', {\r\n              initialValue: desc || null,\r\n              rules: [\r\n                {\r\n                  max: 150,\r\n                  message: 'Max is 150 letter',\r\n                },\r\n              ],\r\n            })(<TextArea />)}\r\n          </FormItem>\r\n\r\n          <FormItem {...tailFormItemLayout}>\r\n            {!disable\r\n            ? (\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n              Save\r\n                </Button>\r\n            )\r\n            : (\r\n              <Button type=\"primary\" disabled htmlType=\"submit\">\r\n         Save\r\n                </Button>\r\n            ) }\r\n          </FormItem>\r\n        </Form>\r\n        <NotificationContainer />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default RegistrationForm;\r\n"],"sourceRoot":""}