{"version":3,"sources":["routes/services/AddService/index.jsx"],"names":["FormItem","Form","Item","TextArea","Input","Registration","state","content","fileList","previewVisible","previewImage","categories","fileName","removedFile","disable","handleCancel","_this","setState","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","_this$state","files","map","value","push","response","fullName","length","icon","body","axios","post","then","result","message","data","NotificationManager","success","setTimeout","history","_ref","Object","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","file","wrap","_context","prev","next","pic","stop","_x","apply","this","arguments","catch","_ref2","_callee2","error","_error$response","statusText","_context2","_x2","handleEditorChange","target","getContent","handlePreview","url","thumbUrl","removeFile","_callee3","_context3","handleChange","_ref4","isJPG","type","isPNG","isLt2M","size","status","getFieldDecorator","_this$state2","uploadButton","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","antd__WEBPACK_IMPORTED_MODULE_10__","className","formItemLayout","labelCol","xs","span","sm","wrapperCol","antd__WEBPACK_IMPORTED_MODULE_11__","title","antd__WEBPACK_IMPORTED_MODULE_8__","onSubmit","assign","label","Fragment","antd__WEBPACK_IMPORTED_MODULE_12__","action","listType","onPreview","onChange","onRemove","antd__WEBPACK_IMPORTED_MODULE_13__","visible","footer","onCancel","alt","style","width","src","rules","required","whitespace","max","antd__WEBPACK_IMPORTED_MODULE_9__","maxLength","_tinymce_tinymce_react__WEBPACK_IMPORTED_MODULE_18__","init","images_upload_url","images_upload_base_path","image_caption","images_upload_handler","blobInfo","failure","formData","FormData","append","blob","concat","height","image_title","automatic_uploads","file_picker_types","images_upload_credentials","plugins","toolbar","offset","antd__WEBPACK_IMPORTED_MODULE_14__","disabled","htmlType","react_notifications__WEBPACK_IMPORTED_MODULE_17__","Component","RegistrationForm","create"],"mappings":"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","file":"static/js/107.1a4acc39.chunk.js","sourcesContent":["/* eslint-disable camelcase */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Upload,\r\n  Modal,\r\n  Icon,\r\n} from 'antd';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    content: '',\r\n    fileList: [],\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    categories: [],\r\n    fileName: '',\r\n    removedFile: [],\r\n    disable: false,\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.setState({ disable: true });\r\n        const {\r\n          content, fileList, removedFile,\r\n        } = this.state;\r\n        const files = [];\r\n        fileList.map((value) => {\r\n          files.push(value.response.fullName);\r\n          return files;\r\n        });\r\n        if (files.length !== 0) {\r\n          values.icon = files[0];\r\n          values.body = content;\r\n          axios.post('/api/v2/services', values).then((result) => {\r\n            const { data: { message } } = result;\r\n            NotificationManager.success(message, 'SUCCESS', 2000);\r\n            setTimeout(() => {\r\n              this.props.history.push('/admin/services/viewServices');\r\n              this.setState({ disable: false });\r\n            }, 3000);\r\n            if (removedFile.length) {\r\n              removedFile.map(async (file) => {\r\n                await axios.post('/api/v2/files/removeFile', { pic: file });\r\n              });\r\n            }\r\n          }).catch(async (error) => {\r\n            const { data: { message }, statusText } = error.response;\r\n            NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n            setTimeout(() => {\r\n              this.setState({ disable: false });\r\n            }, 2000);\r\n          });\r\n        } else {\r\n          NotificationManager.error(\r\n            'Please Choose image or video !',\r\n            'ERROR',\r\n            2000,\r\n          );\r\n          setTimeout(() => {\r\n            this.setState({ disable: false });\r\n          }, 2000);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleEditorChange = (e) => {\r\n    const content = e.target.getContent();\r\n    this.setState(() => ({ content }));\r\n  }\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  removeFile = async (file) => {\r\n    const { removedFile } = this.state;\r\n    const {\r\n      response: { fullName },\r\n    } = file;\r\n    removedFile.push(fullName);\r\n    this.setState({ removedFile });\r\n  };\r\n\r\n  handleChange = ({ file, fileList }) => {\r\n    const isJPG = file.type === 'image/jpeg';\r\n    const isPNG = file.type === 'image/png';\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isJPG && !isPNG) {\r\n      NotificationManager.error(\r\n        'You can only upload image files!',\r\n        'ERROR',\r\n        2000,\r\n      );\r\n    } else if (!isLt2M) {\r\n      NotificationManager.error('Image must smaller than 2MB!', 'ERROR', 2000);\r\n    } else {\r\n      this.setState({ fileList });\r\n      const { status } = file;\r\n      if (status === 'done') {\r\n        const {\r\n          response: { fullName },\r\n        } = file;\r\n        this.setState({ fileName: fullName });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { previewVisible, fileList, previewImage,disable } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Services\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem {...formItemLayout} label={<span>Image</span>}>\r\n            <>\r\n              <Upload\r\n                action=\"/api/v2/files/uploadFile\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onPreview={this.handlePreview}\r\n                onChange={this.handleChange}\r\n                onRemove={this.removeFile}\r\n              >\r\n                {fileList.length === 1 ? null : uploadButton}\r\n              </Upload>\r\n              <Modal\r\n                visible={previewVisible}\r\n                footer={null}\r\n                onCancel={this.handleCancel}\r\n              >\r\n                <img\r\n                  alt=\"example\"\r\n                  style={{ width: '100%' }}\r\n                  src={previewImage}\r\n                />\r\n              </Modal>\r\n            </>\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Title</span>}>\r\n            {getFieldDecorator('title', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input the title!',\r\n                  whitespace: true,\r\n                }, {\r\n                  max: 80,\r\n                  message: 'Max is 80 letter',\r\n\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Seo</span>}>\r\n            {getFieldDecorator('seo', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input the seo!',\r\n                  whitespace: true,\r\n                }, {\r\n                  max: 30,\r\n                  message: 'Max is 30 letter',\r\n\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Description</span>}>\r\n            {getFieldDecorator('desc', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input the description!',\r\n                  whitespace: true,\r\n                },\r\n                {\r\n                  max: 300,\r\n                  message: 'Max is 300 letter !',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(<TextArea maxLength=\"300\" />)}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label={<span>Body</span>}>\r\n            <Editor\r\n              init={{\r\n                images_upload_url: '/api/v2/files/uploadFile',\r\n                images_upload_base_path: '/api/v2/files/uploadFile',\r\n                image_caption: true,\r\n                images_upload_handler: (blobInfo, success, failure) => {\r\n                  const formData = new FormData();\r\n                  formData.append('file', blobInfo.blob());\r\n                  axios.post('/api/v2/files/uploadFile', formData).then((result) => {\r\n                    const { data: { fullName } } = result;\r\n                    success(`/api/v2/files/getFile/${fullName}`);\r\n                  }).catch((error) => {\r\n                    failure('error !');\r\n                  });\r\n                },\r\n                height: 500,\r\n                image_title: true,\r\n                automatic_uploads: true,\r\n                file_picker_types: 'file image media',\r\n                images_upload_credentials: true,\r\n                plugins: 'print preview fullpage powerpaste searchreplace autolink directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount tinymcespellchecker a11ychecker imagetools textpattern help formatpainter permanentpen pageembed mentions linkchecker',\r\n                toolbar: 'formatselect | bold italic strikethrough forecolor backcolor permanentpen formatpainter | link image media pageembed | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent | removeformat | addcomment',\r\n              }}\r\n              onChange={this.handleEditorChange}\r\n      />\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n          {!disable\r\n              ? (\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n                </Button>\r\n              )\r\n              : (\r\n                <Button type=\"primary\" disabled htmlType=\"submit\">\r\n         Submit\r\n                </Button>\r\n              ) }\r\n          </FormItem>\r\n        </Form>\r\n        <NotificationContainer />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default RegistrationForm;\r\n"],"sourceRoot":""}