{"version":3,"sources":["routes/Testimonials/Edit/index.jsx"],"names":["TextArea","Input","FormItem","Form","Item","Registration","state","footer_description","mobile","email","logo","copyrighrs","previewVisible","previewImage","fileList","inputVisible","fileName","pic","removedFile","disable","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","_this$state","setState","id","match","params","axios","post","concat","then","result","message","data","statusText","status","NotificationManager","success","setTimeout","history","push","error","catch","loading","_error$response","response","errorMessage","statusMessage","handleCancel","handlePreview","file","url","thumbUrl","removeFile","_callee","urlSplit","fullName","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","split","length","stop","handleChange","_ref2","componentDidMount","_ref3","Object","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee2","name","image","description","jobTitle","_context2","get","uid","uuid","_x2","apply","this","arguments","_error$response2","errorText","getFieldDecorator","_this$state2","formItemLayout","labelCol","xs","span","sm","wrapperCol","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","antd__WEBPACK_IMPORTED_MODULE_10__","type","className","antd__WEBPACK_IMPORTED_MODULE_11__","title","antd__WEBPACK_IMPORTED_MODULE_9__","onSubmit","assign","label","initialValue","antd__WEBPACK_IMPORTED_MODULE_8__","rules","max","rows","offset","antd__WEBPACK_IMPORTED_MODULE_12__","disabled","htmlType","react_notifications__WEBPACK_IMPORTED_MODULE_16__","Component","RegistrationForm","create"],"mappings":"wRA2BQA,EAAaC,IAAbD,SACFE,EAAWC,IAAKC,KAEhBC,6MACJC,MAAQ,CACNC,mBAAoB,GACpBC,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNC,WAAY,GACZC,gBAAgB,EAChBC,aAAc,GACdC,SAAU,GACVC,cAAc,EACdC,SAAU,GACVC,IAAK,YACLC,YAAa,GACbC,SAAS,KAGXC,aAAe,SAACC,GACdA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,wBAAwB,SAACC,EAAKC,GAAW,IAAAC,EACxBN,EAAKjB,MADmBuB,EAC/Cf,SAD+Ce,EACrCb,SAClB,IAAKW,EAAK,CACRJ,EAAKO,SAAS,CAAEX,SAAS,IADjB,IAIMY,EAEVR,EAAKC,MAHPQ,MACEC,OAAUF,GAGdG,IACGC,KADH,+BAAAC,OACuCL,GAAMH,GAC1CS,KAAK,SAACC,GAAW,IAENC,EAEND,EAFFE,KAAQD,QACRE,EACEH,EADFG,WAEoB,MAAlBH,EAAOI,QACTC,sBAAoBC,QAAQL,EAAS,UAAW,KAChDM,WAAW,WACTtB,EAAKC,MAAMsB,QAAQC,KAAK,4BACxBxB,EAAKO,SAAS,CAAEX,SAAS,KACxB,OAEHwB,sBAAoBK,MAAMT,GAAWE,EAAY,QAAS,KAC1DI,WAAW,WACTtB,EAAKO,SAAS,CAAEX,SAAS,KACxB,QAGN8B,MAAM,SAACD,GACNzB,EAAKO,SAAS,CAAEoB,SAAS,GAAS,WAAM,IAAAC,EAIlCH,EAAMI,SAFSC,EAFmBF,EAEpCX,KAAQD,QACIe,EAHwBH,EAGpCV,WAEFE,sBAAoBK,MAAMK,GAAgBC,EAAe,QAAS,KAClET,WAAW,WACTtB,EAAKO,SAAS,CAAEX,SAAS,KACxB,eAOfoC,aAAe,kBAAMhC,EAAKO,SAAS,CAAElB,gBAAgB,OAErD4C,cAAgB,SAACC,GACflC,EAAKO,SAAS,CACZjB,aAAc4C,EAAKC,KAAOD,EAAKE,SAC/B/C,gBAAgB,OAIpBgD,iDAAa,SAAAC,EAAOJ,GAAP,IAAAvC,EAAAwC,EAAAI,EAAA9C,EAAA+C,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACHnD,EAAgBK,EAAKjB,MAArBY,aACAwC,EAAQD,EAARC,MAEAI,EAAWJ,EAAIY,MAAM,KACrBtD,EAAW8C,EAASA,EAASS,OAAS,GAC5CrD,EAAY6B,KAAK/B,KAGH+C,EACVN,EADFL,SAAYW,SAGd7C,EAAY6B,KAAKgB,IAEnBxC,EAAKO,SAAS,CAAEZ,gBAdL,wBAAAiD,EAAAK,SAAAX,8DAiBbY,aAAe,SAAAC,GAAwB,IAArBjB,EAAqBiB,EAArBjB,KAAM3C,EAAe4D,EAAf5D,SAGtB,GAFAS,EAAKO,SAAS,CAAEhB,aAED,SADI2C,EAAXf,OACe,KAEPqB,EACVN,EADFL,SAAYW,SAEdxC,EAAKO,SAAS,CAAEd,SAAU+C,QAI9BY,kBAAoB,WAAM,IAGV5C,EAEVR,EAAKC,MAHPQ,MACEC,OAAUF,GAGdG,IAAK,wBAAAE,OAAyBL,IAAMM,KAApC,eAAAuC,EAAAC,OAAAC,EAAA,EAAAD,CAAAb,EAAAC,EAAAc,KAAyC,SAAAC,EAAO1C,GAAP,IAAAE,EAAAyC,EAAAC,EAAAC,EAAAC,EAAAtE,EAAA,OAAAkD,EAAAC,EAAAC,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAC/B7B,EAASF,EAATE,KAENyC,EAIEzC,EAJFyC,KACAC,EAGE1C,EAHF0C,MACAC,EAEE3C,EAFF2C,YACAC,EACE5C,EADF4C,SAEItE,EAAW,GARsBuE,EAAAhB,KAAA,EASjCnC,IACHoD,IADG,yBAAAlD,OAC0B8C,IAC7B7C,KAAK,SAAAC,GAAM,OAAIxB,EAASiC,KAAK,CAC5BwC,IAAKC,MACLP,KAAM,YACNvC,OAAQ,OACRgB,IAAG,yBAAAtB,OAA2B8C,OAE/BjC,MAAM,SAACD,MAjB6B,OAkBvCzB,EAAKO,SAAS,CACZmD,OACAnE,WACAqE,cACAC,aAtBqC,wBAAAC,EAAAb,SAAAQ,MAAzC,gBAAAS,GAAA,OAAAb,EAAAc,MAAAC,KAAAC,YAAA,IAwBG3C,MAAM,SAACD,GAAU,IAAA6C,EAId7C,EAAMI,SAFSC,EAFDwC,EAEhBrD,KAAQD,QACIuD,EAHID,EAGhBpD,WAEFE,sBAAoBK,MAAMK,GAAgByC,EAAW,QAAS,KAC9DjD,WAAW,WACTtB,EAAKC,MAAMsB,QAAQC,KAAK,6BACvB,gFAIE,IACCgD,EAAsBJ,KAAKnE,MAAMC,KAAjCsE,kBADDC,EAUHL,KAAKrF,MAJP2E,GANKe,EAGLlF,SAHKkF,EAILpF,eAJKoF,EAKL/E,IALK+E,EAMLf,MACAE,EAPKa,EAOLb,YACAC,EARKY,EAQLZ,SACAjE,EATK6E,EASL7E,QAEI8E,EAAiB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAIdG,EAAAtC,EAAAuC,cAAA,WACED,EAAAtC,EAAAuC,cAACC,EAAA,EAAD,CAAMC,KAAK,SACXH,EAAAtC,EAAAuC,cAAA,OAAKG,UAAU,mBAAf,WAeJ,OACEJ,EAAAtC,EAAAuC,cAACI,EAAA,EAAD,CAAMD,UAAU,UAAUE,MAAM,4BAC9BN,EAAAtC,EAAAuC,cAACM,EAAA,EAAD,CAAMC,SAAUpB,KAAKvE,cACnBmF,EAAAtC,EAAAuC,cAACtG,EAAD2E,OAAAmC,OAAA,GAAcf,EAAd,CAA8BgB,MAAOV,EAAAtC,EAAAuC,cAAA,sBAClCT,EAAkB,OAAQ,CACzBmB,aAAcjC,GADfc,CAEEQ,EAAAtC,EAAAuC,cAACW,EAAA,EAAD,QAELZ,EAAAtC,EAAAuC,cAACtG,EAAD2E,OAAAmC,OAAA,GAAcf,EAAd,CAA8BgB,MAAOV,EAAAtC,EAAAuC,cAAA,2BAClCT,EAAkB,WAAY,CAC7BmB,aAAc9B,GADfW,CAGEQ,EAAAtC,EAAAuC,cAACW,EAAA,EAAD,QAELZ,EAAAtC,EAAAuC,cAACtG,EAAD2E,OAAAmC,OAAA,GAAcf,EAAd,CAA8BgB,MAAOV,EAAAtC,EAAAuC,cAAA,6BAClCT,EAAkB,cAAe,CAChCmB,aAAc/B,EACdiC,MAAO,CAAC,CACNC,IAAK,IACL9E,QAAS,yBAJZwD,CAMEQ,EAAAtC,EAAAuC,cAACxG,EAAD,CAAUsH,KAAM,MAErBf,EAAAtC,EAAAuC,cAACtG,EAnCoB,CACzBoG,WAAY,CACVH,GAAI,CACFC,KAAM,GACNmB,OAAQ,GAEVlB,GAAI,CACFD,KAAM,GACNmB,OAAQ,KA4BNpG,EAOIoF,EAAAtC,EAAAuC,cAACgB,EAAA,EAAD,CAAQd,KAAK,UAAUe,UAAQ,EAACC,SAAS,UAAzC,QALAnB,EAAAtC,EAAAuC,cAACgB,EAAA,EAAD,CAAQd,KAAK,UAAUgB,SAAS,UAAhC,UAWRnB,EAAAtC,EAAAuC,cAACmB,EAAA,sBAAD,cA3NmBC,aAiOrBC,EAAmB1H,IAAK2H,QAAL3H,CAAcE,GACxBwH","file":"static/js/102.073d32fa.chunk.js","sourcesContent":["/* eslint-disable camelcase */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Button, Card, Form, Input, Icon, Upload, Modal,\r\n} from 'antd';\r\nimport uuid from 'uuid';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\n\r\nconst { TextArea } = Input;\r\nconst FormItem = Form.Item;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    footer_description: '',\r\n    mobile: '',\r\n    email: '',\r\n    logo: '',\r\n    copyrighrs: '',\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    fileList: [],\r\n    inputVisible: false,\r\n    fileName: '',\r\n    pic: 'noPic.jpg',\r\n    removedFile: [],\r\n    disable: false\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      const { fileList, fileName } = this.state;\r\n      if (!err) {\r\n        this.setState({ disable: true });\r\n        const {\r\n          match: {\r\n            params: { id },\r\n          },\r\n        } = this.props;\r\n        axios\r\n          .post(`/api/v2/testimonials/update/${id}`, values)\r\n          .then((result) => {\r\n            const {\r\n              data: { message },\r\n              statusText,\r\n            } = result;\r\n            if (result.status === 200) {\r\n              NotificationManager.success(message, 'SUCCESS', 2000);\r\n              setTimeout(() => {\r\n                this.props.history.push('/admin/testimonials/view');\r\n                this.setState({ disable: true });\r\n              }, 3000);\r\n            } else {\r\n              NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 2000);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({ loading: false }, () => {\r\n              const {\r\n                data: { message: errorMessage },\r\n                statusText: statusMessage,\r\n              } = error.response;\r\n              NotificationManager.error(errorMessage || statusMessage, 'ERROR', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 2000);\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  removeFile = async (file) => {\r\n    const { removedFile } = this.state;\r\n    const { url } = file;\r\n    if (url) {\r\n      const urlSplit = url.split('/');\r\n      const fileName = urlSplit[urlSplit.length - 1];\r\n      removedFile.push(fileName);\r\n    } else {\r\n      const {\r\n        response: { fullName },\r\n      } = file;\r\n\r\n      removedFile.push(fullName);\r\n    }\r\n    this.setState({ removedFile });\r\n  };\r\n\r\n  handleChange = ({ file, fileList }) => {\r\n    this.setState({ fileList });\r\n    const { status } = file;\r\n    if (status === 'done') {\r\n      const {\r\n        response: { fullName },\r\n      } = file;\r\n      this.setState({ fileName: fullName });\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n    } = this.props;\r\n    axios(`/api/v2/testimonials/${id}`).then(async (result) => {\r\n      const { data } = result;\r\n      const {\r\n        name,\r\n        image,\r\n        description,\r\n        jobTitle,\r\n      } = data;\r\n      const fileList = [];\r\n      await axios\r\n        .get(`/api/v2/files/getFile/${image}`)\r\n        .then(result => fileList.push({\r\n          uid: uuid(),\r\n          name: 'image.png',\r\n          status: 'done',\r\n          url: `/api/v2/files/getFile/${image}`,\r\n        }))\r\n        .catch((error) => {});\r\n      this.setState({\r\n        name,\r\n        fileList,\r\n        description,\r\n        jobTitle,\r\n      });\r\n    }).catch((error) => {\r\n      const {\r\n        data: { message: errorMessage },\r\n        statusText: errorText,\r\n      } = error.response;\r\n      NotificationManager.error(errorMessage || errorText, 'ERROR', 2000);\r\n      setTimeout(() => {\r\n        this.props.history.push('/admin/testimonials/view');\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const {\r\n      fileList,\r\n      previewVisible,\r\n      pic,\r\n      name,\r\n      description,\r\n      jobTitle,\r\n      disable\r\n    } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Edit Testimonial Details\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem {...formItemLayout} label={<span>name</span>}>\r\n            {getFieldDecorator('name', {\r\n              initialValue: name,\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>job title</span>}>\r\n            {getFieldDecorator('jobTitle', {\r\n              initialValue: jobTitle,\r\n\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Description</span>}>\r\n            {getFieldDecorator('description', {\r\n              initialValue: description,\r\n              rules: [{\r\n                max: 450,\r\n                message: 'Max is 450 letter !',\r\n              }],\r\n            })(<TextArea rows={4} />)}\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n          {!disable\r\n            ? (\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n              Save\r\n                </Button>\r\n            )\r\n            : (\r\n                <Button type=\"primary\" disabled htmlType=\"submit\">\r\n         Save\r\n                </Button>\r\n            ) }\r\n          </FormItem>\r\n        </Form>\r\n        <NotificationContainer />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default RegistrationForm;\r\n"],"sourceRoot":""}