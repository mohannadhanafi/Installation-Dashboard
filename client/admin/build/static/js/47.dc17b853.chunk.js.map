{"version":3,"sources":["appRedux/actions/form.js","routes/Options/Logo/index.jsx","routes/Options/Social/index.jsx","routes/Options/Footer/index.jsx","routes/Options/ContactUs/index.jsx","routes/Options/General/index.jsx","routes/Options/Additional/index.jsx","routes/Options/EmailSettings/index.jsx","routes/Options/Settings/index.jsx"],"names":["setForm","values","type","SET_FORM","payload","FormItem","Form","Item","Registration","state","logo","copyrighrs","previewVisible","previewVisiblecoloured","previewVisiblewhite","previewVisiblefaviconList","previewImage","previewImageWhite","previewImageFav","fileList","inputVisible","fileName","pic","removedFilecoloured","removedFilewhite","removedFilefav","disable","mobile","colouredName","coloured","whiteName","white","faviconListName","faviconList","color","componentDidMount","_callee","options","_options$","footer_logo","favicon","res","data","_data$","ctatitle","ctasub","regenerator_default","a","wrap","_context","prev","next","_this","props","axios","get","concat","then","push","uid","name","status","url","catch","error","sent","setState","stop","handleCancel","handlePreview","file","thumbUrl","removeFile","_callee2","_this$state","urlSplit","response","fullName","_context2","split","length","t0","abrupt","t1","handleChange","_ref3","isJPG","isPNG","isLt2M","size","Object","defineProperty","faviconname","NotificationManager","changeColour","_ref9","_this2","this","getFieldDecorator","form","_this$state2","formItemLayout","labelCol","xs","span","sm","wrapperCol","uploadButton","react_default","createElement","icon","className","Fragment","es_form","onSubmit","handleSubmit","assign","label","rc_color_picker_lib_default","onChange","input","style","cursor","backgroundColor","width","upload","action","listType","onPreview","withCredentials","onRemove","accept","modal","visible","footer","onCancel","alt","src","float","lib","Component","RegistrationForm","create","connect","_ref10","opations","confirmDirty","autoCompleteResult","categories","post","validateFieldsAndScroll","err","Social_FormItem","initialValue","facebook","twitter","youtube","google","instagram","whats","linkedin","googleplay","appstore","_ref2","e","preventDefault","result","message","statusText","success","setTimeout","Footer_FormItem","footer_address","footer_email","rules","footer_mobile","footer_phone","_ref","ContactUs_FormItem","address","phone","tel","fax","email","latitude","longitude","active","onChangeCheck","General_FormItem","max","copyrights","es_checkbox","defaultChecked","Additional_FormItem","header","TextArea_default","rows","EmailSettings_FormItem","mail","TabPane","Tabs","index","goToHome","history","onSave","localStorage","removeItem","role","card","title","es_button","onClick","tabs","disabled","tab","key","General","ContactUs","Social","Logo","Additional","Footer","EmailSettings","auth"],"mappings":"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","file":"static/js/47.dc17b853.chunk.js","sourcesContent":["import { SET_FORM } from '../../constants/ActionTypes';\r\n\r\nexport const setForm = values => ({\r\n  type: SET_FORM,\r\n  payload: values,\r\n});\r\n","// /* eslint-disable camelcase */\r\n// /* eslint-disable react/sort-comp */\r\n// /* eslint-disable no-console */\r\n// /* eslint-disable class-methods-use-this */\r\n// /* eslint-disable no-cond-assign */\r\n// /* eslint-disable no-param-reassign */\r\n// /* eslint-disable no-constant-condition */\r\n// /* eslint-disable linebreak-style */\r\n// /* eslint-disable react/jsx-closing-bracket-location */\r\n// /* eslint-disable linebreak-style */\r\n// /* eslint-disable react/no-access-state-in-setstate */\r\n// /* eslint-disable react/jsx-one-expression-per-line */\r\n// /* eslint-disable react/destructuring-assignment */\r\n// /* eslint-disable react/prop-types */\r\n// /* eslint-disable linebreak-style */\r\n// import React, { Component } from 'react';\r\n// import {\r\n//   Form, Upload, Modal, Icon, Input,\r\n// } from 'antd';\r\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n// import axios from 'axios';\r\n// import {\r\n//   NotificationContainer,\r\n//   NotificationManager,\r\n// } from 'react-notifications';\r\n// import TextArea from 'antd/lib/input/TextArea';\r\n// import ColorPicker from 'rc-color-picker';\r\n// import 'rc-color-picker/assets/index.css';\r\n// import { connect } from 'react-redux/es';\r\n// import { setForm } from '../../../appRedux/actions/form';\r\n\r\n// const FormItem = Form.Item;\r\n\r\n// class Registration extends Component {\r\n//   state = {\r\n//     logo: '',\r\n//     copyrighrs: '',\r\n//     previewVisible: false,\r\n//     previewImage: '',\r\n//     fileList: [],\r\n//     inputVisible: false,\r\n//     fileName: '',\r\n//     pic: 'noPic.jpg',\r\n//     removedFile: [],\r\n//     disable: false,\r\n//     mobile: '',\r\n//     colouredName: '',\r\n//     coloured: [],\r\n//     whiteName: '',\r\n//     white: [],\r\n//     faviconListName: '',\r\n//     faviconList: [],\r\n//     color: '',\r\n//   };\r\n\r\n//   componentDidMount = async () => {\r\n//     const { options } = this.props;\r\n//     const {\r\n//       logo: pic, footer_logo, favicon, color,\r\n//     } = options[0];\r\n//     const coloured = [];\r\n//     const white = [];\r\n//     const faviconList = [];\r\n//     await axios\r\n//       .get(`/api/v2/files/getFile/${pic}`)\r\n//       .then(() => {\r\n//         coloured.push({\r\n//           uid: '-1',\r\n//           name: 'image.png',\r\n//           status: 'done',\r\n//           url: `/api/v2/files/getFile/${pic}`,\r\n//         });\r\n//       })\r\n//       .catch((error) => {});\r\n//     await axios\r\n//       .get(`/api/v2/files/getFile/${footer_logo}`)\r\n//       .then(() => {\r\n//         white.push({\r\n//           uid: '-1',\r\n//           name: 'image.png',\r\n//           status: 'done',\r\n//           url: `/api/v2/files/getFile/${footer_logo}`,\r\n//         });\r\n//       })\r\n//       .catch((error) => {});\r\n//     await axios\r\n//       .get(`/api/v2/files/getFav/${favicon}`)\r\n//       .then(() => {\r\n//         faviconList.push({\r\n//           uid: '-1',\r\n//           name: 'image.png',\r\n//           status: 'done',\r\n//           url: `/api/v2/files/getFav/${favicon}`,\r\n//         });\r\n//       })\r\n//       .catch((error) => {});\r\n//     this.setState({ color });\r\n//   };\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     this.props.form.validateFieldsAndScroll((err, values) => {\r\n//       const {\r\n//         coloured, colouredName, whiteName, faviconListName, color,\r\n//       } = this.state;\r\n//       this.setState({ disable: true });\r\n//       if (!err) {\r\n//         if (colouredName !== '') {\r\n//           values.logo = colouredName;\r\n//         }\r\n//         if (whiteName !== '') {\r\n//           values.footer_logo = whiteName;\r\n//         }\r\n//         if (faviconListName !== '') {\r\n//           values.favicon = faviconListName;\r\n//         }\r\n//         if (color) {\r\n//           values.color = color;\r\n//         }\r\n//         if (coloured.length) {\r\n//           axios\r\n//             .post('/api/v2/options', values)\r\n//             .then((result) => {\r\n//               const {\r\n//                 data: { message },\r\n//                 statusText,\r\n//               } = result;\r\n//               if (result.status === 200) {\r\n//                 NotificationManager.success(message, 'SUCCESS', 2000);\r\n//                 setTimeout(() => {\r\n//                   this.props.history.push('/admin/options/main');\r\n//                   this.setState({ disable: false });\r\n//                 }, 3000);\r\n//               } else {\r\n//                 NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n//                 setTimeout(() => {\r\n//                   this.setState({ disable: false });\r\n//                 }, 2000);\r\n//               }\r\n//             })\r\n//             .catch((error) => {\r\n//               const {\r\n//                 response: {\r\n//                   data: { message },\r\n//                 },\r\n//               } = error;\r\n//               NotificationManager.error(message, 'ERROR', 2000);\r\n//               setTimeout(() => {\r\n//                 this.setState({ disable: false });\r\n//               }, 2000);\r\n//             });\r\n//         } else {\r\n//           NotificationManager.error('Please Choose an image !', 'ERROR', 2000);\r\n//           setTimeout(() => {\r\n//             this.setState({ disable: false });\r\n//           }, 2000);\r\n//         }\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n//   handlePreview = (file) => {\r\n//     this.setState({\r\n//       previewImage: file.url || file.thumbUrl,\r\n//       previewVisible: true,\r\n//     });\r\n//   };\r\n\r\n//   removeFile = async (file) => {\r\n//     const { removedFile } = this.state;\r\n//     const { url } = file;\r\n//     if (url) {\r\n//       const urlSplit = url.split('/');\r\n//       const fileName = urlSplit[urlSplit.length - 1];\r\n//       removedFile.push(fileName);\r\n//     } else {\r\n//       const {\r\n//         response: { fullName },\r\n//       } = file;\r\n\r\n//       removedFile.push(fullName);\r\n//     }\r\n//     this.setState({ removedFile });\r\n//   };\r\n\r\n//   handleChange = ({ file, fileList }, type) => {\r\n//     const values = {};\r\n//     const isJPG = file.type === 'image/svg';\r\n//     const isPNG = file.type === 'image/png';\r\n//     const isLt2M = file.size / 1024 / 1024 < 2;\r\n//     this.setState(() => ({ [type]: fileList }));\r\n//     if (fileList.length) {\r\n//       if (!isJPG && !isPNG) {\r\n//         NotificationManager.error(\r\n//           'You can only upload image files!',\r\n//           'ERROR',\r\n//           2000,\r\n//         );\r\n//         this.setState(() => ({ [type]: [] }));\r\n//       } else if (!isLt2M) {\r\n//         NotificationManager.error(\r\n//           'Image must smaller than 2MB!',\r\n//           'ERROR',\r\n//           2000,\r\n//         );\r\n//       } else {\r\n//         this.setState(() => ({ [type]: fileList }));\r\n//         const { status } = file;\r\n//         if (status === 'done') {\r\n//           if (type === 'faviconList') {\r\n//             const { response } = file;\r\n//             values.favicon = response;\r\n//             this.props.setForm(values);\r\n//             const name = `${[type]}Name`;\r\n//             this.setState(() => ({ [name]: response }));\r\n//           } else {\r\n//             const {\r\n//               response: { fullName },\r\n//             } = file;\r\n//             if (type === 'coloured') {\r\n//               values.logo = fullName;\r\n//               this.props.setForm(values);\r\n//             }\r\n//             if (type === 'white') {\r\n//               values.footer_logo = fullName;\r\n//               this.props.setForm(values);\r\n//             }\r\n//             const name = `${[type]}Name`;\r\n//             this.setState(() => ({ [name]: fullName }));\r\n//           }\r\n//         }\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   changeColour = ({ color }) => {\r\n//     this.setState({ color });\r\n//     const values = {};\r\n//     values.color = color;\r\n//     this.props.setForm(values);\r\n//   };\r\n\r\n//   render() {\r\n//     const { getFieldDecorator } = this.props.form;\r\n//     const {\r\n//       white,\r\n//       previewVisible,\r\n//       pic,\r\n//       coloured,\r\n//       colouredName,\r\n//       faviconList,\r\n//       faviconListName,\r\n//       color,\r\n//     } = this.state;\r\n//     const { options } = this.props;\r\n//     const formItemLayout = {\r\n//       labelCol: {\r\n//         xs: { span: 24 },\r\n//         sm: { span: 6 },\r\n//       },\r\n//       wrapperCol: {\r\n//         xs: { span: 24 },\r\n//         sm: { span: 18 },\r\n//       },\r\n//     };\r\n//     const uploadButton = (\r\n//       <div>\r\n//         <Icon type=\"plus\" />\r\n//         <div className=\"ant-upload-text\">Upload</div>\r\n//       </div>\r\n//     );\r\n//     return (\r\n//       <>\r\n//         <Form onSubmit={this.handleSubmit}>\r\n//           <FormItem {...formItemLayout} label=\"Select Color\">\r\n//             {getFieldDecorator('colour', {})(\r\n//               <ColorPicker color={color} onChange={this.changeColour}>\r\n//                 <Input\r\n//                   className=\"colour-picker\"\r\n//                   style={{\r\n//                     cursor: 'pointer !important',\r\n//                     backgroundColor: color,\r\n//                     width: '50px',\r\n//                   }}\r\n//                   />\r\n//               </ColorPicker>,\r\n//             )}\r\n//           </FormItem>\r\n//           <FormItem {...formItemLayout} label=\"Main Logo\">\r\n//             <Upload\r\n//               action=\"/api/v2/files/uploadFile\"\r\n//               listType=\"picture-card\"\r\n//               fileList={coloured}\r\n//               onPreview={this.handlePreview}\r\n//               onChange={file => this.handleChange(file, 'coloured')}\r\n//               withCredentials\r\n//               onRemove={this.removeFile}\r\n//               accept=\".png,.svg\"\r\n//             >\r\n//               {coloured.length >= 1 ? null : uploadButton}\r\n//             </Upload>\r\n//             <Modal\r\n//               visible={previewVisible}\r\n//               footer={null}\r\n//               onCancel={this.handleCancel}\r\n//             >\r\n//               <img\r\n//                 alt=\"example\"\r\n//                 style={{ width: '100%' }}\r\n//                 src={`/api/v2/files/getFile/${pic}`}\r\n//               />\r\n//             </Modal>\r\n//           </FormItem>\r\n\r\n//           <FormItem {...formItemLayout} label=\"Footer Logo\">\r\n//             <Upload\r\n//               action=\"/api/v2/files/uploadFile\"\r\n//               listType=\"picture-card\"\r\n//               fileList={white}\r\n//               onPreview={this.handlePreview}\r\n//               onChange={file => this.handleChange(file, 'white')}\r\n//               withCredentials\r\n//               onRemove={this.removeFile}\r\n//               accept=\".png,.svg\"\r\n//             >\r\n//               {white.length >= 1 ? null : uploadButton}\r\n//             </Upload>\r\n//             <Modal\r\n//               visible={previewVisible}\r\n//               footer={null}\r\n//               onCancel={this.handleCancel}\r\n//             >\r\n//               <img\r\n//                 alt=\"example\"\r\n//                 style={{ width: '100%' }}\r\n//                 src={`/api/v2/files/getFile/${colouredName}`}\r\n//               />\r\n//             </Modal>\r\n//           </FormItem>\r\n\r\n//           <FormItem {...formItemLayout} label=\"Fav ico\" style={{ float: 'unset' }}>\r\n//             <Upload\r\n//               action=\"/api/v2/files/uploadFav\"\r\n//               listType=\"picture-card\"\r\n//               fileList={faviconList}\r\n//               onPreview={this.handlePreview}\r\n//               onChange={file => this.handleChange(file, 'faviconList')}\r\n//               withCredentials\r\n//               onRemove={this.removeFile}\r\n//               accept=\".png,.svg\"\r\n//               >\r\n//               {faviconList.length >= 1 ? null : uploadButton}\r\n//             </Upload>\r\n//             <Modal\r\n//               visible={previewVisible}\r\n//               footer={null}\r\n//               onCancel={this.handleCancel}\r\n//               accept=\".png,.svg\"\r\n//               >\r\n//               <img\r\n//                 alt=\"example\"\r\n//                 style={{ width: '100%' }}\r\n//                 src={`/api/v2/files/getFav/${faviconListName}`}\r\n//                 />\r\n//             </Modal>\r\n//           </FormItem>\r\n\r\n//           {/* <FormItem {...formItemLayout} label={<span>CTA Title</span>}>\r\n//             {getFieldDecorator('ctatitle', {\r\n//               initialValue: ctatitle,\r\n//               rules: [{ max: 70, message: 'Only 70 Letter is allowed !' }],\r\n//             })(<TextArea rows={4} />)}\r\n//           </FormItem>\r\n//           <FormItem {...formItemLayout} label={<span>CTA SubTitle</span>}>\r\n//             {getFieldDecorator('ctasub', {\r\n//               initialValue: ctasub,\r\n//               rules: [{ max: 150, message: 'Only 150 Letter is allowed !' }],\r\n//             })(<TextArea rows={8} />)}\r\n//           </FormItem> */}\r\n//         </Form>\r\n//         <NotificationContainer />\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const RegistrationForm = Form.create()(Registration);\r\n// const mapStateToProps = ({ opations }) => {\r\n//   const { opations: options } = opations;\r\n//   return {\r\n//     options,\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, { setForm })(RegistrationForm);\r\n\r\n\r\n/* eslint-disable camelcase */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Form, Upload, Modal, Icon, Input,\r\n} from 'antd';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport ColorPicker from 'rc-color-picker';\r\nimport 'rc-color-picker/assets/index.css';\r\nimport { connect } from 'react-redux/es';\r\nimport { setForm } from '../../../appRedux/actions/form';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    logo: '',\r\n    copyrighrs: '',\r\n    previewVisible: false,\r\n    previewVisiblecoloured: false,\r\n    previewVisiblewhite: false,\r\n    previewVisiblefaviconList: false,\r\n    previewImage: '',\r\n    previewImageWhite: '',\r\n    previewImageFav: '',\r\n    fileList: [],\r\n    inputVisible: false,\r\n    fileName: '',\r\n    pic: 'noPic.jpg',\r\n    removedFilecoloured: [],\r\n    removedFilewhite: [],\r\n    removedFilefav: [],\r\n    disable: false,\r\n    mobile: '',\r\n    colouredName: '',\r\n    coloured: [],\r\n    whiteName: '',\r\n    white: [],\r\n    faviconListName: '',\r\n    faviconList: [],\r\n    color: '#ffb31a',\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const { options } = this.props;\r\n    const { logo: pic, footer_logo, favicon } = options[0];\r\n    const coloured = [];\r\n    const white = [];\r\n    const faviconList = [];\r\n    await axios\r\n      .get(`/api/v2/files/getFile/${pic}`)\r\n      .then(() => {\r\n        coloured.push({\r\n          uid: '-1',\r\n          name: 'image.png',\r\n          status: 'done',\r\n          url: `/api/v2/files/getFile/${pic}`,\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n    await axios\r\n      .get(`/api/v2/files/getFile/${footer_logo}`)\r\n      .then(() => {\r\n        white.push({\r\n          uid: '-1',\r\n          name: 'image.png',\r\n          status: 'done',\r\n          url: `/api/v2/files/getFile/${footer_logo}`,\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n    await axios\r\n      .get(`/api/v2/files/getFav/${favicon}`)\r\n      .then(() => {\r\n        faviconList.push({\r\n          uid: '-1',\r\n          name: 'image.png',\r\n          status: 'done',\r\n          url: `/api/v2/files/getFav/${favicon}`,\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n    const res = await axios.get('/api/v2/options');\r\n    const { data } = res;\r\n    const {\r\n      ctatitle,\r\n      ctasub,\r\n      color,\r\n    } = data[0];\r\n    this.setState({\r\n      pic,\r\n      footer_logo,\r\n      favicon,\r\n      coloured,\r\n      ctatitle,\r\n      ctasub,\r\n      white,\r\n      faviconList,\r\n      color,\r\n    });\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisiblecoloured: false, previewVisiblewhite: false, previewVisiblefaviconList: false });\r\n\r\n  handlePreview = (file, type) => {\r\n    switch (type) {\r\n      case 'coloured':\r\n        this.setState({\r\n          previewImage: file.url || file.thumbUrl,\r\n          previewVisiblecoloured: true,\r\n        });\r\n        break;\r\n      case 'white':\r\n        this.setState({\r\n          previewImage: file.url || file.thumbUrl,\r\n          previewVisiblewhite: true,\r\n        });\r\n        break;\r\n      case 'faviconList':\r\n        this.setState({\r\n          previewImage: file.url || file.thumbUrl,\r\n          previewVisiblefaviconList: true,\r\n        });\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  removeFile = async (file, type) => {\r\n    const values = {};\r\n    const { removedFilecoloured, removedFilewhite, removedFilefav } = this.state;\r\n    const { url } = file;\r\n    if (url) {\r\n      const urlSplit = url.split('/');\r\n      const fileName = urlSplit[urlSplit.length - 1];\r\n      switch (type) {\r\n        case 'coloured':\r\n          removedFilecoloured.push(fileName);\r\n          values.removedFilecoloured = removedFilecoloured;\r\n          this.props.setForm(values);\r\n          break;\r\n        case 'white':\r\n          removedFilewhite.push(fileName);\r\n          values.removedFilewhite = removedFilewhite;\r\n          this.props.setForm(values);\r\n          break;\r\n        case 'faviconList':\r\n          removedFilefav.push(fileName);\r\n          values.removedFilefav = removedFilefav;\r\n          this.props.setForm(values);\r\n          break;\r\n        default:\r\n          return null;\r\n      }\r\n    } else {\r\n      const {\r\n        response,\r\n      } = file;\r\n      if (response === 'favicon.ico') {\r\n        removedFilefav.push(response);\r\n        values.removedFilefav = removedFilefav;\r\n        this.props.setForm(values);\r\n      } else {\r\n        const { fullName } = response;\r\n        switch (type) {\r\n          case 'coloured':\r\n            removedFilecoloured.push(fullName);\r\n            values.removedFilecoloured = removedFilecoloured;\r\n            this.props.setForm(values);\r\n            break;\r\n          case 'white':\r\n            removedFilewhite.push(fullName);\r\n            values.removedFilewhite = removedFilewhite;\r\n            this.props.setForm(values);\r\n            break;\r\n          default:\r\n            return null;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = ({ file, fileList }, type) => {\r\n    const values = {};\r\n    const isJPG = file.type === 'image/svg';\r\n    const isPNG = file.type === 'image/png';\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    this.setState(() => ({ [type]: fileList }));\r\n    if (fileList.length) {\r\n      if (!isJPG && !isPNG) {\r\n        NotificationManager.error(\r\n          'You can only upload image files!',\r\n          'ERROR',\r\n          2000,\r\n        );\r\n        this.setState(() => ({ [type]: [] }));\r\n      } else if (!isLt2M) {\r\n        NotificationManager.error(\r\n          'Image must smaller than 2MB!',\r\n          'ERROR',\r\n          2000,\r\n        );\r\n      } else {\r\n        this.setState(() => ({ [type]: fileList }));\r\n        const { status } = file;\r\n        if (status === 'done') {\r\n          if (type === 'faviconList') {\r\n            const { response } = file;\r\n            values.favicon = response;\r\n            this.props.setForm(values);\r\n            const name = `${[type]}Name`;\r\n            values.faviconname = name;\r\n            this.props.setForm(values);\r\n            this.setState(() => ({ [name]: response }));\r\n          } else {\r\n            const {\r\n              response: { fullName },\r\n            } = file;\r\n            if (type === 'coloured') {\r\n              values.logo = fullName;\r\n              this.props.setForm(values);\r\n            }\r\n            if (type === 'white') {\r\n              values.footer_logo = fullName;\r\n              this.props.setForm(values);\r\n            }\r\n            const name = `${[type]}Name`;\r\n            this.setState(() => ({ [name]: fullName }));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  changeColour = ({ color }) => {\r\n    this.setState({ color });\r\n    const values = {};\r\n    values.color = color;\r\n    this.props.setForm(values);\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const {\r\n      white,\r\n      previewVisible,\r\n      previewVisiblecoloured,\r\n      pic,\r\n      coloured,\r\n      faviconList,\r\n      faviconListName,\r\n      color,\r\n      previewVisiblewhite,\r\n      footer_logo,\r\n    } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem {...formItemLayout} label=\"Select Color\">\r\n            {getFieldDecorator('colour', {})(\r\n              <ColorPicker color={color} onChange={this.changeColour}>\r\n                <Input\r\n                  className=\"colour-picker\"\r\n                  style={{\r\n                    cursor: 'pointer !important',\r\n                    backgroundColor: color,\r\n                    width: '50px',\r\n                  }}\r\n                  />\r\n              </ColorPicker>,\r\n            )}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label=\"Main Logo\">\r\n            <Upload\r\n              action=\"/api/v2/files/uploadFile\"\r\n              listType=\"picture-card\"\r\n              fileList={coloured}\r\n              onPreview={file => this.handlePreview(file, 'coloured')}\r\n              onChange={file => this.handleChange(file, 'coloured')}\r\n              withCredentials\r\n              onRemove={file => this.removeFile(file, 'coloured')}\r\n              accept=\".png,.svg\"\r\n            >\r\n              {coloured.length >= 1 ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n              visible={previewVisiblecoloured}\r\n              footer={null}\r\n              onCancel={this.handleCancel}\r\n            >\r\n              <img\r\n                alt=\"example\"\r\n                style={{ width: '100%' }}\r\n                src={`/api/v2/files/getFile/${pic}`}\r\n              />\r\n            </Modal>\r\n          </FormItem>\r\n\r\n          <FormItem {...formItemLayout} label=\"Footer Logo\">\r\n            <Upload\r\n              action=\"/api/v2/files/uploadFile\"\r\n              listType=\"picture-card\"\r\n              fileList={white}\r\n              onPreview={file => this.handlePreview(file, 'white')}\r\n              onChange={file => this.handleChange(file, 'white')}\r\n              withCredentials\r\n              onRemove={file => this.removeFile(file, 'white')}\r\n              accept=\".png,.svg\"\r\n            >\r\n              {white.length >= 1 ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n              visible={previewVisiblewhite}\r\n              footer={null}\r\n              onCancel={this.handleCancel}\r\n            >\r\n              <img\r\n                alt=\"example\"\r\n                style={{ width: '100%' }}\r\n                src={`/api/v2/files/getFile/${footer_logo}`}\r\n              />\r\n            </Modal>\r\n          </FormItem>\r\n\r\n          <FormItem {...formItemLayout} label=\"Fav ico\" style={{ float: 'unset' }}>\r\n            <Upload\r\n              action=\"/api/v2/files/uploadFav\"\r\n              listType=\"picture-card\"\r\n              fileList={faviconList}\r\n              onPreview={file => this.handlePreview(file, 'faviconList')}\r\n              onChange={file => this.handleChange(file, 'faviconList')}\r\n              withCredentials\r\n              onRemove={file => this.removeFile(file, 'faviconList')}\r\n              accept=\".png,.svg\"\r\n              >\r\n              {faviconList.length >= 1 ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n              visible={previewVisible}\r\n              footer={null}\r\n              onCancel={this.handleCancel}\r\n              accept=\".png,.svg\"\r\n              >\r\n              <img\r\n                alt=\"example\"\r\n                style={{ width: '100%' }}\r\n                src={`/api/v2/files/getFav/${faviconListName}`}\r\n                />\r\n            </Modal>\r\n          </FormItem>\r\n        </Form>\r\n        <NotificationContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nconst mapStateToProps = ({ opations }) => {\r\n  const { opations: options } = opations;\r\n  return {\r\n    options,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setForm })(RegistrationForm);\r\n","/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n} from 'antd';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { connect } from 'react-redux/es';\r\nimport { setForm } from '../../../appRedux/actions/form';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n    fileList: [],\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    categories: [],\r\n    fileName: '',\r\n\r\n    disable: false,\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  removeFile = async (file) => {\r\n    if ((file.status = 'removed')) {\r\n      const {\r\n        response: { fullName: pic },\r\n      } = file;\r\n      await axios.post('/api/v2/removeFile', { pic }).then(() => {\r\n        this.setState({ fileName: '' });\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  onChange =() => {\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      this.props.setForm(values);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { options } = this.props;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    return (\r\n      <>\r\n        {options.length ? (\r\n          <Form onSubmit={this.handleSubmit} onChange={this.onChange}>\r\n            <FormItem {...formItemLayout} label={<span>Facebook</span>}>\r\n              {getFieldDecorator('facebook', { initialValue: options[0].facebook })(<Input />)}\r\n            </FormItem>\r\n\r\n            <FormItem {...formItemLayout} label={<span>Twitter</span>}>\r\n              {getFieldDecorator('twitter', { initialValue: options[0].twitter })(<Input />)}\r\n            </FormItem>\r\n\r\n            <FormItem {...formItemLayout} label={<span>Youtube</span>}>\r\n              {getFieldDecorator('youtube', { initialValue: options[0].youtube })(<Input />)}\r\n            </FormItem>\r\n\r\n            <FormItem {...formItemLayout} label={<span>Google</span>}>\r\n              {getFieldDecorator('google', { initialValue: options[0].google })(<Input />)}\r\n            </FormItem>\r\n\r\n            <FormItem {...formItemLayout} label={<span>Instagram</span>}>\r\n              {getFieldDecorator('instagram', { initialValue: options[0].instagram })(<Input />)}\r\n            </FormItem>\r\n\r\n            <FormItem {...formItemLayout} label={<span>Whatsapp</span>}>\r\n              {getFieldDecorator('whats', { initialValue: options[0].whats })(<Input />)}\r\n            </FormItem>\r\n\r\n            <FormItem {...formItemLayout} label={<span>Linked In</span>}>\r\n              {getFieldDecorator('linkedin', { initialValue: options[0].linkedin })(<Input />)}\r\n            </FormItem>\r\n\r\n            <FormItem {...formItemLayout} label={<span>Google Play</span>}>\r\n              {getFieldDecorator('googleplay', { initialValue: options[0].googleplay })(<Input />)}\r\n            </FormItem>\r\n\r\n            <FormItem {...formItemLayout} label={<span>App Store</span>} style={{ float: 'unset' }}>\r\n              {getFieldDecorator('appstore', { initialValue: options[0].appstore })(<Input />)}\r\n            </FormItem>\r\n          </Form>\r\n        ) : null}\r\n\r\n        <NotificationContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst RegistrationForm = Form.create()(Registration);\r\nconst mapStateToProps = ({ opations }) => {\r\n  const { opations: options } = opations;\r\n  return {\r\n    options,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setForm })(RegistrationForm);\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Button, Form, Input,\r\n} from 'antd';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux/es';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport { setForm } from '../../../appRedux/actions/form';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    disable: false,\r\n  };\r\n\r\n onChange =() => {\r\n   this.props.form.validateFieldsAndScroll((err, values) => {\r\n     this.props.setForm(values);\r\n   });\r\n }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      this.setState({ disable: true });\r\n      if (!err) {\r\n        axios\r\n          .post('/api/v2/option', values)\r\n          .then((result) => {\r\n            const {\r\n              data: { message },\r\n              statusText,\r\n            } = result;\r\n            if (result.status === 200) {\r\n              NotificationManager.success(message, 'SUCCESS', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 3000);\r\n            } else {\r\n              NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 2000);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            const {\r\n              response: {\r\n                data: { message },\r\n              },\r\n            } = error;\r\n            NotificationManager.error(message, 'ERROR', 2000);\r\n            setTimeout(() => {\r\n              this.setState({ disable: false });\r\n            }, 2000);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { options } = this.props;\r\n\r\n    const { disable } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n\r\n      <>\r\n        {\r\n  options.length ? (\r\n    <Form onSubmit={this.handleSubmit} onChange={this.onChange}>\r\n      <FormItem {...formItemLayout} label={<span>Address</span>}>\r\n        {getFieldDecorator('footer_address', { initialValue: options[0].footer_address })(<Input />)}\r\n      </FormItem>\r\n      <FormItem {...formItemLayout} label=\"E-mail\">\r\n        {getFieldDecorator('footer_email', {\r\n          initialValue: options[0].footer_email,\r\n          rules: [\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n          ],\r\n        })(<Input />)}\r\n      </FormItem>\r\n      <FormItem {...formItemLayout} label=\"Mobile\">\r\n        {getFieldDecorator('footer_mobile', {\r\n          initialValue: options[0].footer_mobile,\r\n        })(<Input type=\"number\" />)}\r\n      </FormItem>\r\n      <FormItem {...formItemLayout} label=\"Phone\" style={{ float: 'unset' }}>\r\n        {getFieldDecorator('footer_phone', {\r\n          initialValue: options[0].footer_phone,\r\n        })(<Input type=\"number\" />)}\r\n      </FormItem>\r\n    </Form>\r\n  ) : (null)\r\n}\r\n\r\n        <NotificationContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nconst mapStateToProps = ({ opations }) => {\r\n  const { opations: options } = opations;\r\n  return {\r\n    options,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setForm })(RegistrationForm);\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Form, Input,\r\n} from 'antd';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport { connect } from 'react-redux/es';\r\nimport { setForm } from '../../../appRedux/actions/form';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    disable: false,\r\n\r\n  };\r\n\r\n  onChange =() => {\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      this.props.setForm(values);\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      this.setState({ disable: true });\r\n      if (!err) {\r\n        axios\r\n          .post('/api/v2/option', values)\r\n          .then((result) => {\r\n            const {\r\n              data: { message },\r\n              statusText,\r\n            } = result;\r\n            if (result.status === 200) {\r\n              NotificationManager.success(message, 'SUCCESS', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 3000);\r\n            } else {\r\n              NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 2000);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            const {\r\n              response: {\r\n                data: { message },\r\n              },\r\n            } = error;\r\n            NotificationManager.error(message, 'ERROR', 2000);\r\n            setTimeout(() => {\r\n              this.setState({ disable: false });\r\n            }, 2000);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { options } = this.props;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    return (\r\n      <>\r\n        {\r\n  options.length ? (\r\n    <Form onSubmit={this.handleSubmit} onChange={this.onChange}>\r\n\r\n      <FormItem {...formItemLayout} label={<span>address</span>}>\r\n        {getFieldDecorator('address', { initialValue: options[0].address })(<Input />)}\r\n      </FormItem>\r\n      <FormItem {...formItemLayout} label=\"Mobile\">\r\n        {getFieldDecorator('mobile', {\r\n          initialValue: options[0].mobile,\r\n        })(<Input type=\"number\" />)}\r\n      </FormItem>\r\n      <FormItem {...formItemLayout} label=\"Phone\">\r\n        {getFieldDecorator('phone', {\r\n          initialValue: options[0].phone,\r\n        })(<Input type=\"number\" />)}\r\n      </FormItem>\r\n      <FormItem {...formItemLayout} label=\"Tel\">\r\n        {getFieldDecorator('tel', {\r\n          initialValue: options[0].tel,\r\n        })(<Input type=\"number\" />)}\r\n      </FormItem>\r\n      <FormItem {...formItemLayout} label=\"Fax\">\r\n        {getFieldDecorator('fax', {\r\n          initialValue: options[0].fax,\r\n        })(<Input type=\"number\" />)}\r\n      </FormItem>\r\n      <FormItem {...formItemLayout} label=\"E-mail\">\r\n        {getFieldDecorator('email', {\r\n          initialValue: options[0].email,\r\n          rules: [\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n          ],\r\n        })(<Input />)}\r\n      </FormItem>\r\n      <FormItem {...formItemLayout} label={<span>Latitude</span>}>\r\n        {getFieldDecorator('latitude', {\r\n          initialValue: options[0].latitude,\r\n        })(<Input type=\"number\" />)}\r\n      </FormItem>\r\n      <FormItem {...formItemLayout} label={<span>Longitude</span>} style={{ float: 'unset' }}>\r\n        {getFieldDecorator('longitude', {\r\n          initialValue: options[0].longitude,\r\n        })(<Input type=\"number\" />)}\r\n      </FormItem>\r\n    </Form>\r\n  ) : null}\r\n\r\n        <NotificationContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nconst mapStateToProps = ({ opations }) => {\r\n  const { opations: options } = opations;\r\n  return {\r\n    options,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setForm })(RegistrationForm);\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Form, Input, Checkbox,\r\n} from 'antd';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport { connect } from 'react-redux/es';\r\nimport { setForm } from '../../../appRedux/actions/form';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    disable: false,\r\n    copyrighrs: '',\r\n    name: '',\r\n    active: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { options } = this.props;\r\n    if (options.length) {\r\n      this.setState({ active: options[0].active });\r\n    }\r\n  }\r\n\r\n\r\n  onChangeCheck = () => {\r\n    this.setState({ active: !this.state.active });\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      values.active = this.state.active;\r\n      this.props.setForm(values);\r\n    });\r\n  };\r\n\r\n  onChange =() => {\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      this.props.setForm(values);\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      this.setState({ disable: true });\r\n      if (!err) {\r\n        axios\r\n          .post('/api/v2/option', values)\r\n          .then((result) => {\r\n            const {\r\n              data: { message },\r\n              statusText,\r\n            } = result;\r\n            if (result.status === 200) {\r\n              NotificationManager.success(message, 'SUCCESS', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 3000);\r\n            } else {\r\n              NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 2000);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            const {\r\n              response: {\r\n                data: { message },\r\n              },\r\n            } = error;\r\n            NotificationManager.error(message, 'ERROR', 2000);\r\n            setTimeout(() => {\r\n              this.setState({ disable: false });\r\n            }, 2000);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const { options } = this.props;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    return (\r\n      <>\r\n        {\r\n  options.length ? (\r\n    <Form onSubmit={this.handleSubmit} onChange={this.onChange}>\r\n      <FormItem {...formItemLayout} label={<span>Website Name</span>}>\r\n        {getFieldDecorator('name', {\r\n          initialValue: options[0].name,\r\n          rules: [{ max: 30, message: 'Only 30 Letter is allowed !' }],\r\n        })(<Input />)}\r\n      </FormItem>\r\n\r\n      <FormItem {...formItemLayout} label={<span>Copyrights</span>}>\r\n        {getFieldDecorator('copyrights', {\r\n          initialValue: options[0].copyrights,\r\n          rules: [{ max: 70, message: 'Only 70 Letter is allowed !' }],\r\n        })(<Input />)}\r\n      </FormItem>\r\n\r\n      <FormItem\r\n        style={{ float: 'unset' }}\r\n        {...formItemLayout}\r\n        label={<span>Active</span>}\r\n            >\r\n        {getFieldDecorator('active')(\r\n          <Checkbox defaultChecked={options[0].active}\r\n                >\r\n                  Disable the webiste\r\n          </Checkbox>,\r\n        )}\r\n      </FormItem>\r\n    </Form>\r\n  ) : null}\r\n\r\n        <NotificationContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nconst mapStateToProps = (props) => {\r\n  const { opations: options } = props.opations;\r\n  return {\r\n    options,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setForm })(RegistrationForm);\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Button, Form,\r\n} from 'antd';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { connect } from 'react-redux/es';\r\nimport { setForm } from '../../../appRedux/actions/form';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    disable: false,\r\n\r\n  };\r\n\r\n  onChange =() => {\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      this.props.setForm(values);\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      this.setState({ disable: true });\r\n      if (!err) {\r\n        axios\r\n          .post('/api/v2/option', values)\r\n          .then((result) => {\r\n            const {\r\n              data: { message },\r\n              statusText,\r\n            } = result;\r\n            if (result.status === 200) {\r\n              NotificationManager.success(message, 'SUCCESS', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 3000);\r\n            } else {\r\n              NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 2000);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            const {\r\n              response: {\r\n                data: { message },\r\n              },\r\n            } = error;\r\n            NotificationManager.error(message, 'ERROR', 2000);\r\n            setTimeout(() => {\r\n              this.setState({ disable: false });\r\n            }, 2000);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { options } = this.props;\r\n\r\n    const { disable } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <>\r\n        {\r\n  options.length ? (\r\n    <Form onSubmit={this.handleSubmit} onChange={this.onChange}>\r\n\r\n      <FormItem {...formItemLayout} label={<span>Header</span>}>\r\n        {getFieldDecorator('header', {\r\n          initialValue: options[0].header,\r\n          rules: [{ max: 150, message: 'Only 150 Letter is allowed !' }],\r\n        })(<TextArea rows={4} />)}\r\n      </FormItem>\r\n\r\n      <FormItem {...formItemLayout} label={<span>Footer</span>} style={{ float: 'unset' }}>\r\n        {getFieldDecorator('footer', {\r\n          initialValue: options[0].footer,\r\n          rules: [{ max: 150, message: 'Only 150 Letter is allowed !' }],\r\n        })(<TextArea rows={4} />)}\r\n      </FormItem>\r\n    </Form>\r\n  ) : null\r\n             }\r\n        <NotificationContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nconst mapStateToProps = ({ opations }) => {\r\n  const { opations: options } = opations;\r\n  return {\r\n    options,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setForm })(RegistrationForm);\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Form, Input, Checkbox,\r\n} from 'antd';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport { connect } from 'react-redux/es';\r\nimport { setForm } from '../../../appRedux/actions/form';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    disable: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { options } = this.props;\r\n    if (options.length) {\r\n      this.setState({ active: options[0].active });\r\n    }\r\n  }\r\n\r\n\r\n  onChangeCheck = () => {\r\n    this.setState({ active: !this.state.active });\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      values.active = this.state.active;\r\n      this.props.setForm(values);\r\n    });\r\n  };\r\n\r\n  onChange =() => {\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      this.props.setForm(values);\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const { options } = this.props;\r\n    const { disable } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {\r\n  options.length ? (\r\n    <Form onSubmit={this.handleSubmit} onChange={this.onChange}>\r\n\r\n\r\n      <FormItem {...formItemLayout} label={<span>Mail</span>}>\r\n        {getFieldDecorator('mail', {\r\n          initialValue: options[0].mail,\r\n          rules: [\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n          ],\r\n        })(<Input />)}\r\n      </FormItem>\r\n\r\n      <FormItem {...formItemLayout} label=\"Password\">\r\n        {getFieldDecorator('password', {\r\n          rules: [\r\n            {\r\n              // required: true,\r\n              // message: 'Please input your password!',\r\n            },\r\n\r\n          ],\r\n        })(<Input type=\"password\" />)}\r\n      </FormItem>\r\n      <FormItem />\r\n    </Form>\r\n  ) : null}\r\n\r\n        <NotificationContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nconst mapStateToProps = (props) => {\r\n  const { opations: options } = props.opations;\r\n  return {\r\n    options,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setForm })(RegistrationForm);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Tabs, Card, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport Logo from '../Logo';\r\nimport Social from '../Social';\r\nimport Footer from '../Footer';\r\nimport ContactUs from '../ContactUs';\r\nimport General from '../General';\r\nimport Additional from '../Additional';\r\nimport EmailSetting from '../EmailSettings';\r\nimport './style.css';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass index extends Component {\r\n    state = {}\r\n\r\ngoToHome = () => {\r\n  this.props.history.push('/admin/main');\r\n}\r\n\r\nonSave = () => {\r\n  const { values } = this.props;\r\n  axios\r\n    .post('/api/v2/options', values)\r\n    .then((result) => {\r\n      const {\r\n        data: { message },\r\n        statusText,\r\n      } = result;\r\n      if (result.status === 200) {\r\n        NotificationManager.success(message, 'SUCCESS', 2000);\r\n        setTimeout(() => {\r\n          this.setState({ disable: false });\r\n          localStorage.removeItem('values');\r\n        }, 3000);\r\n      } else {\r\n        NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n        setTimeout(() => {\r\n          this.setState({ disable: false });\r\n        }, 2000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      const {\r\n        response: {\r\n          data: { message },\r\n        },\r\n      } = error;\r\n      NotificationManager.error(message, 'ERROR', 2000);\r\n      setTimeout(() => {\r\n        this.setState({ disable: false });\r\n      }, 2000);\r\n    });\r\n}\r\n\r\nrender() {\r\n  const { role } = this.props;\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Settings\">\r\n      <div className=\"buttons\">\r\n        <Button className=\"spec--button\" onClick={this.goToHome}>Cancel</Button>\r\n        <Button className=\"spec--button\" onClick={this.onSave}>Save</Button>\r\n      </div>\r\n      <Tabs>\r\n\r\n        {role !== 'admin' ? (\r\n          <TabPane disabled tab=\"General Settings\" key=\"1\" style={{ color: 'red' }}>\r\n            <General />\r\n          </TabPane>\r\n        ) : (\r\n          <TabPane tab=\"General Settings\" key=\"1\" style={{ color: 'red' }}>\r\n            <General />\r\n          </TabPane>\r\n        )}\r\n\r\n        <TabPane tab=\"Contact Us\" key=\"2\">\r\n          <ContactUs />\r\n        </TabPane>\r\n\r\n        <TabPane tab=\"Social Media\" key=\"3\">\r\n          <Social />\r\n        </TabPane>\r\n\r\n        <TabPane tab=\"Style\" key=\"4\">\r\n          <Logo />\r\n        </TabPane>\r\n\r\n        {role !== 'admin' ? (\r\n          <TabPane disabled tab=\"Additional Codes\" key=\"5\">\r\n            <Additional />\r\n          </TabPane>\r\n        ) : (\r\n          <TabPane tab=\"Additional Codes\" key=\"5\">\r\n            <Additional />\r\n          </TabPane>\r\n        )}\r\n\r\n        <TabPane tab=\"Footer\" key=\"6\">\r\n          <Footer />\r\n        </TabPane>\r\n        <TabPane tab=\"Email Setting\" key=\"7\">\r\n          <EmailSetting />\r\n        </TabPane>\r\n      </Tabs>\r\n      <NotificationContainer />\r\n    </Card>\r\n  );\r\n}\r\n}\r\n\r\nconst mapStateToProps = ({ auth, opations, form }) => {\r\n  const { role } = auth;\r\n  const { opations: options } = opations;\r\n  const { values } = form;\r\n  return {\r\n    role,\r\n    options,\r\n    values,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(index);\r\n"],"sourceRoot":""}