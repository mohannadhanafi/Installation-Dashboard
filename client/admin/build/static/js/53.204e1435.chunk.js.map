{"version":3,"sources":["routes/Users/AddUser/index.jsx"],"names":["FormItem","Form","Item","Option","Select","Registration","state","confirmDirty","autoCompleteResult","loading","fileList","removedFile","fileName","previewImage","previewVisible","disable","toggleLoading","_this","setState","handleSubmit","_callee5","e","_this$state","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context5","prev","next","preventDefault","props","form","validateFieldsAndScroll","_ref2","Object","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee4","err","values","_context4","length","pic","axios","post","then","_ref3","_callee2","result","message","_context2","data","NotificationManager","success","setTimeout","history","push","map","_ref4","_callee","file","_context","stop","_x5","apply","this","arguments","_x4","catch","_ref5","_callee3","error","_error$response","statusText","_context3","response","_x6","_x2","_x3","handleConfirmBlur","value","target","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","removeFile","fullName","handleWebsiteChange","domain","concat","handleCancel","handlePreview","url","thumbUrl","handleChange","_ref6","status","getFieldDecorator","_this$state2","formItemLayout","labelCol","xs","span","sm","wrapperCol","uploadButton","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","antd__WEBPACK_IMPORTED_MODULE_11__","type","className","antd__WEBPACK_IMPORTED_MODULE_12__","title","antd__WEBPACK_IMPORTED_MODULE_13__","spinning","antd__WEBPACK_IMPORTED_MODULE_9__","onSubmit","antd__WEBPACK_IMPORTED_MODULE_14__","justify","antd__WEBPACK_IMPORTED_MODULE_15__","assign","label","rules","required","whitespace","max","antd__WEBPACK_IMPORTED_MODULE_16__","id","validator","pattern","onBlur","antd__WEBPACK_IMPORTED_MODULE_10__","defaultValue","antd__WEBPACK_IMPORTED_MODULE_17__","action","listType","onPreview","onChange","withCredentials","onRemove","antd__WEBPACK_IMPORTED_MODULE_18__","visible","footer","onCancel","alt","style","width","src","offset","antd__WEBPACK_IMPORTED_MODULE_19__","disabled","htmlType","react_notifications__WEBPACK_IMPORTED_MODULE_20__","Component","RegistrationForm","create"],"mappings":"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","file":"static/js/53.204e1435.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  Spin,\r\n  Upload,\r\n  Modal,\r\n  Row,\r\n  Col,\r\n} from 'antd';\r\nimport {\r\n  NotificationManager,\r\n  NotificationContainer,\r\n} from 'react-notifications';\r\nimport './style.css';\r\n\r\nconst FormItem = Form.Item;\r\nconst { Option } = Select;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n    loading: false,\r\n    fileList: [],\r\n    removedFile: [],\r\n    fileName: '',\r\n    previewImage: '',\r\n    previewVisible: false,\r\n    disable: false,\r\n  };\r\n\r\n  toggleLoading = () => {\r\n    this.setState(() => ({ loading: !this.state.loading }));\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { fileList, removedFile, fileName } = this.state;\r\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\r\n      if (!err) {\r\n        this.setState({ disable: true });\r\n        if (fileList.length) {\r\n          await this.toggleLoading();\r\n          values.pic = fileName;\r\n          axios.post('/api/v2/users', values).then(async (result) => {\r\n            await this.toggleLoading();\r\n            const { data: { message } } = result;\r\n            NotificationManager.success(message, 'SUCCESS', 2000);\r\n            setTimeout(() => {\r\n              this.props.history.push('/admin/users/view');\r\n              this.setState({ disable: false });\r\n            }, 3000);\r\n            if (removedFile.length) {\r\n              removedFile.map(async (file) => {\r\n                await axios.post('/api/v2/files/removeFile', { pic: file });\r\n              });\r\n            }\r\n          }).catch(async (error) => {\r\n            await this.toggleLoading();\r\n            const { data: { message }, statusText } = error.response;\r\n            NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n            setTimeout(() => {\r\n              this.setState({ disable: false });\r\n            }, 2000);\r\n          });\r\n        } else {\r\n          NotificationManager.error('Please Choose an image !', 'ERROR', 2000);\r\n          setTimeout(() => {\r\n            this.setState({ disable: false });\r\n          }, 2000);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  handleConfirmBlur = (e) => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  removeFile = (file) => {\r\n    const { removedFile } = this.state;\r\n    const {\r\n      response: { fullName },\r\n    } = file;\r\n    removedFile.push(fullName);\r\n    this.setState({ removedFile });\r\n  };\r\n\r\n  handleWebsiteChange = (value) => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(\r\n        domain => `${value}${domain}`,\r\n      );\r\n    }\r\n    this.setState({ autoCompleteResult });\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  handleChange = ({ file, fileList }) => {\r\n    this.setState({ fileList });\r\n    const { status } = file;\r\n    if (status === 'done') {\r\n      const {\r\n        response: { fullName },\r\n      } = file;\r\n      this.setState({ fileName: fullName });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const {\r\n      previewVisible, previewImage, fileList, disable,\r\n    } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 16 },\r\n        sm: { span: 10 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 16 },\r\n        sm: { span: 12 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 12,\r\n          offset: 4,\r\n        },\r\n        sm: {\r\n          span: 12,\r\n          offset: 2,\r\n        },\r\n      },\r\n    };\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Add User\">\r\n        <Spin spinning={this.state.loading}>\r\n          <Form onSubmit={this.handleSubmit} className=\"add-user\">\r\n            <Row justify=\"center\">\r\n              <Col span={18}>\r\n                <FormItem {...formItemLayout} label={<span>First Name</span>}>\r\n                  {getFieldDecorator('first', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter first name!',\r\n                        whitespace: true,\r\n                      },\r\n                      {\r\n                        max: 50,\r\n                        message: 'the name must be less than 50',\r\n                        whitespace: true,\r\n                      },\r\n                    ],\r\n                  })(<Input />)}\r\n                </FormItem>\r\n                <FormItem {...formItemLayout} label={<span>Last Name</span>}>\r\n                  {getFieldDecorator('last', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter last name!',\r\n                        whitespace: true,\r\n                      },\r\n                      {\r\n                        max: 50,\r\n                        message: 'the lastname must be less than 50',\r\n                        whitespace: true,\r\n                      },\r\n                    ],\r\n                  })(<Input />)}\r\n                </FormItem>\r\n                <FormItem {...formItemLayout} label={<span>Username</span>}>\r\n                  {getFieldDecorator('username', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter username!',\r\n                        whitespace: true,\r\n                      },\r\n                      {\r\n                        max: 50,\r\n                        message: 'the username must be less than 50',\r\n                        whitespace: true,\r\n                      },\r\n                    ],\r\n                  })(<Input />)}\r\n                </FormItem>\r\n\r\n                <FormItem {...formItemLayout} label=\"E-mail\">\r\n                  {getFieldDecorator('email', {\r\n                    rules: [\r\n                      {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                      },\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your E-mail!',\r\n                      },\r\n                    ],\r\n                  })(<Input id=\"email1\" type=\"email\" />)}\r\n                </FormItem>\r\n                <FormItem {...formItemLayout} label=\"Password\">\r\n                  {getFieldDecorator('password', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter the password!',\r\n                      },\r\n                      {\r\n                        validator: this.validateToNextPassword,\r\n                      },\r\n                      {\r\n                        pattern: '^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{4,}$',\r\n                        message:\r\n                          'Passowrd must have at least one Numeric and one Character and length must be more than 4',\r\n                      },\r\n                    ],\r\n                  })(<Input type=\"password\" />)}\r\n                </FormItem>\r\n                <FormItem {...formItemLayout} label=\"Confirm Password\">\r\n                  {getFieldDecorator('confirm', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: 'Please confirm password!',\r\n                      },\r\n                      {\r\n                        validator: this.compareToFirstPassword,\r\n                      },\r\n                    ],\r\n                  })(<Input type=\"password\" onBlur={this.handleConfirmBlur} />)}\r\n                </FormItem>\r\n                <FormItem {...formItemLayout} label={<span>Role</span>}>\r\n                  {getFieldDecorator('rule', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: 'Please choose role type!',\r\n                        whitespace: true,\r\n                      },\r\n                    ],\r\n                  })(\r\n                    <Select defaultValue=\"admin\">\r\n                      <Option value=\"admin\">Admin</Option>\r\n                      <Option value=\"Data Entery\">Data Entery</Option>\r\n                    </Select>,\r\n                  )}\r\n                </FormItem>\r\n\r\n                <FormItem\r\n                  {...formItemLayout}\r\n                  label={<span>Mobile Number</span>}\r\n                >\r\n                  {getFieldDecorator('mobile')(<Input />)}\r\n                </FormItem>\r\n                <FormItem {...formItemLayout} label={<span>Job Title</span>}>\r\n                  {getFieldDecorator('jobtitle')(<Input />)}\r\n                </FormItem>\r\n                <FormItem {...formItemLayout} label={<span>Address</span>}>\r\n                  {getFieldDecorator('address')(<Input />)}\r\n                </FormItem>\r\n                <FormItem />\r\n\r\n              </Col>\r\n              <Col span={6} className=\"addUser-image\">\r\n                {' '}\r\n                <FormItem {...formItemLayout} label=\"\">\r\n                  <Upload\r\n                    action=\"/api/v2/files/uploadFile\"\r\n                    listType=\"picture-card\"\r\n                    fileList={fileList}\r\n                    onPreview={this.handlePreview}\r\n                    onChange={this.handleChange}\r\n                    withCredentials\r\n                    onRemove={this.removeFile}\r\n                  >\r\n                    {fileList.length === 1 ? null : uploadButton}\r\n                  </Upload>\r\n                  <Modal\r\n                    visible={previewVisible}\r\n                    footer={null}\r\n                    onCancel={this.handleCancel}\r\n                  >\r\n                    <img\r\n                      alt=\"example\"\r\n                      style={{ width: '100%' }}\r\n                      src={previewImage}\r\n                    />\r\n                  </Modal>\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <FormItem {...tailFormItemLayout}>\r\n              {disable ? (\r\n                <Button disabled type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n                </Button>\r\n              ) : (\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n                </Button>\r\n              )}\r\n            </FormItem>\r\n          </Form>\r\n        </Spin>\r\n        <NotificationContainer />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default RegistrationForm;\r\n"],"sourceRoot":""}