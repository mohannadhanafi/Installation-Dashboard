{"version":3,"sources":["routes/Features/Add/index.jsx"],"names":["FormItem","Form","Item","TextArea","Input","Registration","state","confirmDirty","autoCompleteResult","fileList","previewVisible","previewImage","tags","inputVisible","categories","fileName","content","removedFile","heroLength","inputValue","breaking","previewIcon","disable","handleCancel","_this","setState","showPickedIcon","icon","name","handleEditorChange","e","target","getContent","handleSubmit","preventDefault","props","form","validateFieldsAndScroll","err","values","_this$state","body","axios","post","then","result","message","data","newsLetter","NotificationManager","success","setTimeout","history","push","length","map","_ref","Object","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","file","wrap","_context","prev","next","pic","stop","_x","apply","this","arguments","catch","_ref2","_callee2","error","_error$response","statusText","_context2","response","_x2","handlePreview","url","thumbUrl","removeFile","_callee3","fullName","_context3","handleChange","_ref4","isJPG","type","isPNG","isLt2M","size","status","getFieldDecorator","_this$state2","uploadButton","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","antd__WEBPACK_IMPORTED_MODULE_12__","className","formItemLayout","labelCol","xs","span","sm","wrapperCol","antd__WEBPACK_IMPORTED_MODULE_13__","title","antd__WEBPACK_IMPORTED_MODULE_10__","onSubmit","assign","label","Fragment","antd__WEBPACK_IMPORTED_MODULE_14__","action","listType","onPreview","onChange","onRemove","accept","antd__WEBPACK_IMPORTED_MODULE_15__","visible","footer","onCancel","alt","style","width","src","rules","required","whitespace","max","antd__WEBPACK_IMPORTED_MODULE_11__","rows","maxLength","_tinymce_tinymce_react__WEBPACK_IMPORTED_MODULE_9__","init","images_upload_url","images_upload_base_path","image_caption","images_upload_handler","blobInfo","failure","formData","FormData","append","blob","concat","height","image_title","automatic_uploads","file_picker_types","images_upload_credentials","plugins","toolbar","offset","antd__WEBPACK_IMPORTED_MODULE_16__","disabled","htmlType","react_notifications__WEBPACK_IMPORTED_MODULE_18__","Component","RegistrationForm","create","connect","_ref5","auth","authUser","role"],"mappings":"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","file":"static/js/76.502947c2.chunk.js","sourcesContent":["/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  Tooltip,\r\n  Upload,\r\n  Modal,\r\n} from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  NotificationManager,\r\n  NotificationContainer,\r\n} from 'react-notifications';\r\nimport MaterialUiIconPicker from 'react-material-ui-icon-picker';\r\n\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n    fileList: [],\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    tags: [],\r\n    inputVisible: false,\r\n    categories: [],\r\n    fileName: '',\r\n    content: '',\r\n    removedFile: [],\r\n    heroLength: '',\r\n    inputValue: '',\r\n    breaking: false,\r\n    previewIcon: '',\r\n    disable: false,\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  showPickedIcon = (icon) => {\r\n    const { name } = icon;\r\n    this.setState({ icon: name, previewIcon: name });\r\n  };\r\n\r\n  handleEditorChange = (e) => {\r\n    const content = e.target.getContent();\r\n    this.setState(() => ({ content }));\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.setState({ disable: true });\r\n        const {\r\n          removedFile, content, fileName,\r\n        } = this.state;\r\n        values.icon = fileName;\r\n        values.body = content;\r\n        axios\r\n          .post('/api/v2/features', values)\r\n          .then((result) => {\r\n            const {\r\n              data: { message },\r\n            } = result;\r\n            if (values.newsLetter) {\r\n              NotificationManager.success(\r\n                'Feature has been added, redirect to email list',\r\n                'SUCCESS',\r\n                2000,\r\n              );\r\n            } else {\r\n              NotificationManager.success(message, 'SUCCESS', 2000);\r\n              setTimeout(() => {\r\n                this.props.history.push('/admin/features/view');\r\n                this.setState({ disable: false });\r\n              }, 3000);\r\n            }\r\n            if (removedFile.length) {\r\n              removedFile.map(async (file) => {\r\n                await axios.post('/api/v2/files/removeFile', { pic: file });\r\n              });\r\n            }\r\n          })\r\n          .catch(async (error) => {\r\n            const {\r\n              data: { message },\r\n              statusText,\r\n            } = error.response;\r\n            NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n            setTimeout(() => {\r\n              this.setState({ disable: false });\r\n            }, 2000);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  removeFile = async (file) => {\r\n    const { removedFile } = this.state;\r\n    const {\r\n      response: { fullName },\r\n    } = file;\r\n    removedFile.push(fullName);\r\n    this.setState({ removedFile });\r\n  };\r\n\r\n  handleChange = ({ file, fileList }) => {\r\n    const isJPG = file.type === 'image/svg';\r\n    const isPNG = file.type === 'image/png';\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isJPG && !isPNG) {\r\n      NotificationManager.error(\r\n        'You can only upload image files!',\r\n        'ERROR',\r\n        2000,\r\n      );\r\n    } else if (!isLt2M) {\r\n      NotificationManager.error('Image must smaller than 2MB!', 'ERROR', 2000);\r\n    } else {\r\n      this.setState({ fileList });\r\n      const { status } = file;\r\n      if (status === 'done') {\r\n        const {\r\n          response: { fullName },\r\n        } = file;\r\n        this.setState({ fileName: fullName });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const {\r\n      previewVisible, fileList, previewImage, disable,\r\n    } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Add Feature\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem {...formItemLayout} label={<span>Image</span>}>\r\n            <>\r\n              <Upload\r\n                action=\"/api/v2/files/uploadFile\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onPreview={this.handlePreview}\r\n                onChange={this.handleChange}\r\n                onRemove={this.removeFile}\r\n                accept=\".svg,.png\"\r\n              >\r\n                {fileList.length >= 1 ? null : uploadButton}\r\n              </Upload>\r\n              <Modal\r\n                visible={previewVisible}\r\n                footer={null}\r\n                onCancel={this.handleCancel}\r\n              >\r\n                <img\r\n                  alt=\"example\"\r\n                  style={{ width: '100%' }}\r\n                  src={previewImage}\r\n                />\r\n              </Modal>\r\n            </>\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Title</span>}>\r\n            {getFieldDecorator('title', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your title!',\r\n                  whitespace: true,\r\n                }, {\r\n                  max: 20,\r\n                  message: 'Max length is 20 letter',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Description</span>}>\r\n            {getFieldDecorator('desc', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your description!',\r\n                  whitespace: true,\r\n                },\r\n                {\r\n                  max: 250,\r\n                  message: 'Max length is 250 letter',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(<TextArea rows={4} maxLength={300} />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Call To Action</span>}>\r\n            {getFieldDecorator('cta', {\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Body</span>}>\r\n            {' '}\r\n            <Editor\r\n              init={{\r\n                images_upload_url: '/api/v2/files/uploadFile',\r\n\r\n                images_upload_base_path: '/api/v2/files/uploadFile',\r\n                image_caption: true,\r\n\r\n                images_upload_handler: (blobInfo, success, failure) => {\r\n                  const formData = new FormData();\r\n                  formData.append('file', blobInfo.blob());\r\n                  axios\r\n                    .post('/api/v2/files/uploadFile', formData)\r\n                    .then((result) => {\r\n                      const {\r\n                        data: { fullName },\r\n                      } = result;\r\n                      success(`/api/v2/files/getFile/${fullName}`);\r\n                    })\r\n                    .catch((error) => {\r\n                      failure('error !');\r\n                    });\r\n                },\r\n                height: 500,\r\n                image_title: true,\r\n                automatic_uploads: true,\r\n                file_picker_types: 'file image media',\r\n                images_upload_credentials: true,\r\n                plugins:\r\n                  'print preview fullpage powerpaste searchreplace autolink directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount tinymcespellchecker a11ychecker imagetools textpattern help formatpainter permanentpen pageembed mentions linkchecker',\r\n                toolbar:\r\n                  'formatselect | bold italic strikethrough forecolor backcolor permanentpen formatpainter | link image media pageembed | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent | removeformat | addcomment',\r\n              }}\r\n              onChange={this.handleEditorChange}\r\n            />\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n            {!disable\r\n              ? (\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n                </Button>\r\n              )\r\n              : (\r\n                <Button type=\"primary\" disabled htmlType=\"submit\">\r\n         Submit\r\n                </Button>\r\n              ) }\r\n          </FormItem>\r\n        </Form>\r\n        <NotificationContainer />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ auth }) => {\r\n  const { authUser, url, role } = auth;\r\n  return {\r\n    authUser,\r\n    url,\r\n    role,\r\n  };\r\n};\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default connect(mapStateToProps)(RegistrationForm);\r\n"],"sourceRoot":""}