{"version":3,"sources":["routes/Porfolio/Add.jsx"],"names":["FormItem","Select","Option","Form","Item","Registration","state","content","fileList","previewVisible","previewImage","categories","fileName","removedFile","disable","handleCancel","_this","setState","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","_this$state","files","map","value","push","response","fullName","length","image","body","axios","post","then","result","message","data","NotificationManager","success","setTimeout","history","_ref","Object","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","file","wrap","_context","prev","next","pic","stop","_x","apply","this","arguments","catch","_ref2","_callee2","error","_error$response","statusText","_context2","_x2","handleEditorChange","target","getContent","handlePreview","url","thumbUrl","removeFile","_callee3","urlSplit","_context3","split","handleChange","_ref4","status","_this2","get","getFieldDecorator","_this$state2","uploadButton","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","antd__WEBPACK_IMPORTED_MODULE_10__","type","className","formItemLayout","labelCol","xs","span","sm","wrapperCol","antd__WEBPACK_IMPORTED_MODULE_11__","title","antd__WEBPACK_IMPORTED_MODULE_9__","onSubmit","assign","label","Fragment","antd__WEBPACK_IMPORTED_MODULE_12__","action","listType","onPreview","onChange","onRemove","antd__WEBPACK_IMPORTED_MODULE_13__","visible","footer","onCancel","alt","style","width","src","rules","required","whitespace","max","antd__WEBPACK_IMPORTED_MODULE_14__","antd__WEBPACK_IMPORTED_MODULE_8__","category","id","name","antd__WEBPACK_IMPORTED_MODULE_15__","_tinymce_tinymce_react__WEBPACK_IMPORTED_MODULE_20__","init","images_upload_url","images_upload_base_path","image_caption","images_upload_handler","blobInfo","failure","formData","FormData","append","blob","concat","height","image_title","automatic_uploads","file_picker_types","images_upload_credentials","plugins","toolbar","offset","antd__WEBPACK_IMPORTED_MODULE_16__","disabled","htmlType","react_notifications__WEBPACK_IMPORTED_MODULE_19__","Component","RegistrationForm","create"],"mappings":"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","file":"static/js/85.f2bb45d5.chunk.js","sourcesContent":["/* eslint-disable camelcase */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Upload,\r\n  Modal,\r\n  Icon,\r\n  DatePicker,\r\n  Select,\r\n} from 'antd';\r\n\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\nconst { Option } = Select;\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    content: '',\r\n    fileList: [],\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    categories: [],\r\n    fileName: '',\r\n    removedFile: [],\r\n    disable: false,\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.setState({ disable: true });\r\n        const { content, fileList, removedFile } = this.state;\r\n        const files = [];\r\n        fileList.map((value) => {\r\n          files.push(value.response.fullName);\r\n          return files;\r\n        });\r\n        if (files.length !== 0) {\r\n          values.image = files[0];\r\n          values.body = content;\r\n          axios\r\n            .post('/api/v2/portfolio', values)\r\n            .then((result) => {\r\n              const {\r\n                data: { message },\r\n              } = result;\r\n              NotificationManager.success(message, 'SUCCESS', 2000);\r\n              setTimeout(() => {\r\n                this.props.history.push('/admin/portfolio/view');\r\n                this.setState({ disable: false });\r\n              }, 3000);\r\n              if (removedFile.length) {\r\n                removedFile.map(async (file) => {\r\n                  await axios.post('/api/v2/files/removeFile', { pic: file });\r\n                });\r\n              }\r\n            })\r\n            .catch(async (error) => {\r\n              const {\r\n                data: { message },\r\n                statusText,\r\n              } = error.response;\r\n              NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n              setTimeout(() => {\r\n                this.setState({ disable: false });\r\n              }, 2000);\r\n            });\r\n        } else {\r\n          NotificationManager.error(\r\n            'Please Choose image !',\r\n            'ERROR',\r\n            2000,\r\n          );\r\n          setTimeout(() => {\r\n            this.setState({ disable: false });\r\n          }, 2000);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  handleEditorChange = (e) => {\r\n    const content = e.target.getContent();\r\n    this.setState(() => ({ content }));\r\n  };\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  removeFile = async (file) => {\r\n    const { removedFile } = this.state;\r\n    const { url } = file;\r\n    if (url) {\r\n      const urlSplit = url.split('/');\r\n      const fileName = urlSplit[urlSplit.length - 1];\r\n      removedFile.push(fileName);\r\n    } else {\r\n      const {\r\n        response: { fullName },\r\n      } = file;\r\n\r\n      removedFile.push(fullName);\r\n    }\r\n    this.setState({ removedFile });\r\n  };\r\n\r\n  handleChange = ({ file, fileList }) => {\r\n    this.setState({ fileList });\r\n    const { status } = file;\r\n    if (status === 'done') {\r\n      const {\r\n        response: { fullName },\r\n      } = file;\r\n      this.setState({ fileName: fullName });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get('/api/v2/portfolio/portfolioCategory').then((result) => {\r\n      const { data } = result;\r\n      if (data.length) {\r\n        this.setState({ categories: data });\r\n      } else {\r\n        NotificationManager.error('You have to add one category at least', 'ERROR', 2000);\r\n        setTimeout(() => {\r\n          this.props.history.push('/admin/portfolioCategory/add');\r\n        }, 3000);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const {\r\n      previewVisible, fileList, previewImage, disable, categories,\r\n    } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Add To Protfolio\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem {...formItemLayout} label={<span>Image</span>}>\r\n            <>\r\n              <Upload\r\n                action=\"/api/v2/files/uploadFile\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onPreview={this.handlePreview}\r\n                onChange={this.handleChange}\r\n                onRemove={this.removeFile}\r\n              >\r\n                {fileList.length === 1 ? null : uploadButton}\r\n              </Upload>\r\n              <Modal\r\n                visible={previewVisible}\r\n                footer={null}\r\n                onCancel={this.handleCancel}\r\n              >\r\n                <img\r\n                  alt=\"example\"\r\n                  style={{ width: '100%' }}\r\n                  src={previewImage}\r\n                />\r\n              </Modal>\r\n            </>\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Title</span>}>\r\n            {getFieldDecorator('title', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input the title!',\r\n                  whitespace: true,\r\n                },\r\n                {\r\n                  max: 30,\r\n                  message: 'Max is 30 letter',\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          {/* <FormItem {...formItemLayout} label={<span>Service</span>}>\r\n            {getFieldDecorator('service_id', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please choose service !',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(\r\n              <Select>\r\n                {services.length && services.map(service => (\r\n                  <Option value={`${service.id}`}>{service.title}</Option>\r\n                ))}\r\n\r\n              </Select>,\r\n            )}\r\n          </FormItem> */}\r\n          <FormItem {...formItemLayout} label={<span>Category</span>}>\r\n            {getFieldDecorator('categoty_id')(\r\n              <Select>\r\n                {categories.length && categories.map(category => (\r\n                  <option value={category.id}>{category.name}</option>\r\n                ))}\r\n              </Select>,\r\n            )}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Date</span>}>\r\n            {getFieldDecorator('date')(<DatePicker />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Client</span>}>\r\n            {getFieldDecorator('client', {\r\n              rules: [\r\n                {\r\n                  max: 30,\r\n                  message: 'Max is 30 Letter !',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(<Input type=\"text\" />)}\r\n          </FormItem>\r\n\r\n          <FormItem {...formItemLayout} label={<span>Location</span>}>\r\n            {getFieldDecorator('location', {\r\n              rules: [\r\n                {\r\n                  max: 40,\r\n                  message: 'Max is 40 Letter !',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(<Input type=\"text\" />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Body</span>}>\r\n            <Editor\r\n              init={{\r\n                images_upload_url: '/api/v2/files/uploadFile',\r\n                images_upload_base_path: '/api/v2/files/uploadFile',\r\n                image_caption: true,\r\n                images_upload_handler: (blobInfo, success, failure) => {\r\n                  const formData = new FormData();\r\n                  formData.append('file', blobInfo.blob());\r\n                  axios\r\n                    .post('/api/v2/files/uploadFile', formData)\r\n                    .then((result) => {\r\n                      const {\r\n                        data: { fullName },\r\n                      } = result;\r\n                      success(`/api/v2/files/getFile/${fullName}`);\r\n                    })\r\n                    .catch((error) => {\r\n                      failure('error !');\r\n                    });\r\n                },\r\n                height: 500,\r\n                image_title: true,\r\n                automatic_uploads: true,\r\n                file_picker_types: 'file image media',\r\n                images_upload_credentials: true,\r\n                plugins:\r\n                  'print preview fullpage powerpaste searchreplace autolink directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount tinymcespellchecker a11ychecker imagetools textpattern help formatpainter permanentpen pageembed mentions linkchecker',\r\n                toolbar:\r\n                  'formatselect | bold italic strikethrough forecolor backcolor permanentpen formatpainter | link image media pageembed | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent | removeformat | addcomment',\r\n              }}\r\n              onChange={this.handleEditorChange}\r\n            />\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n            {!disable\r\n              ? (\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n                </Button>\r\n              )\r\n              : (\r\n                <Button type=\"primary\" disabled htmlType=\"submit\">\r\n         Submit\r\n                </Button>\r\n              ) }\r\n          </FormItem>\r\n        </Form>\r\n        <NotificationContainer />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default RegistrationForm;\r\n"],"sourceRoot":""}