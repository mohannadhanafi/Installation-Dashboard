{"version":3,"sources":["routes/PricingPlans/Add.jsx"],"names":["FormItem","Form","Item","id","Registration","state","footer_description","mobile","email","logo","copyrighrs","previewVisible","previewImage","fileList","inputVisible","fileName","pic","removedFile","features","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","_this$state","image","axios","post","then","result","message","data","statusText","status","NotificationManager","success","setTimeout","history","push","length","map","_ref","Object","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","file","wrap","_context","prev","next","stop","_x","apply","this","arguments","error","catch","setState","loading","_error$response","response","errorMessage","statusMessage","handleCancel","handlePreview","url","thumbUrl","removeFile","_callee2","urlSplit","fullName","_context2","split","handleChange","_ref3","isJPG","type","isPNG","isLt2M","size","remove","k","keys","getFieldValue","filterFeatures","filter","value","index","setFieldsValue","key","add","nextKeys","concat","_this2","_this$props$form","getFieldDecorator","_this$state2","formItemLayout","labelCol","xs","span","sm","wrapperCol","uploadButton","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","antd__WEBPACK_IMPORTED_MODULE_9__","className","initialValue","formItems","assign","label","required","validateTrigger","rules","whitespace","antd__WEBPACK_IMPORTED_MODULE_10__","placeholder","style","width","marginRight","onClick","antd__WEBPACK_IMPORTED_MODULE_11__","title","antd__WEBPACK_IMPORTED_MODULE_8__","onSubmit","antd__WEBPACK_IMPORTED_MODULE_12__","action","listType","onPreview","onChange","withCredentials","onRemove","accept","antd__WEBPACK_IMPORTED_MODULE_13__","visible","footer","onCancel","alt","src","max","antd_lib_input_TextArea__WEBPACK_IMPORTED_MODULE_19___default","rows","antd__WEBPACK_IMPORTED_MODULE_14__","antd__WEBPACK_IMPORTED_MODULE_15__","offset","htmlType","react_notifications__WEBPACK_IMPORTED_MODULE_18__","Component","RegistrationForm","create"],"mappings":"kTA2BMA,EAAWC,IAAKC,KAClBC,EAAK,EACHC,6MACJC,MAAQ,CACNC,mBAAoB,GACpBC,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNC,WAAY,GACZC,gBAAgB,EAChBC,aAAc,GACdC,SAAU,GACVC,cAAc,EACdC,SAAU,GACVC,IAAK,YACLC,YAAa,GACbC,SAAU,MAGZC,aAAe,SAACC,GACdA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,wBAAwB,SAACC,EAAKC,GAC5C,IAAKD,EAAK,KAAAE,EAGJN,EAAKjB,MADPY,EAFMW,EAENX,YAAaF,EAFPa,EAEOb,SAEfY,EAAOE,MAAQd,EAEfe,IACGC,KAAK,uBAAwBJ,GAC7BK,KAAK,SAACC,GAAW,IAENC,EAEND,EAFFE,KAAQD,QACRE,EACEH,EADFG,WAEoB,MAAlBH,EAAOI,QACTC,sBAAoBC,QAAQL,EAAS,UAAW,KAChDM,WAAW,WACTlB,EAAKC,MAAMkB,QAAQC,KAAK,wBACvB,KACCzB,EAAY0B,QACd1B,EAAY2B,IAAZ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAgB,SAAAC,EAAOC,GAAP,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACR1B,IAAMC,KAAK,2BAA4B,CAAEf,IAAKoC,IADtC,wBAAAE,EAAAG,SAAAN,MAAhB,gBAAAO,GAAA,OAAAb,EAAAc,MAAAC,KAAAC,YAAA,KAKFvB,sBAAoBwB,MAAM5B,GAAWE,EAAY,QAAS,OAG7D2B,MAAM,SAACD,GACNxC,EAAK0C,SAAS,CAAEC,SAAS,GAAS,WAAM,IAAAC,EAIlCJ,EAAMK,SAFSC,EAFmBF,EAEpC/B,KAAQD,QACImC,EAHwBH,EAGpC9B,WAEFE,sBAAoBwB,MAAMM,GAAgBC,EAAe,QAAS,eAO9EC,aAAe,kBAAMhD,EAAK0C,SAAS,CAAErD,gBAAgB,OAErD4D,cAAgB,SAACnB,GACf9B,EAAK0C,SAAS,CACZpD,aAAcwC,EAAKoB,KAAOpB,EAAKqB,SAC/B9D,gBAAgB,OAIpB+D,iDAAa,SAAAC,EAAOvB,GAAP,IAAAnC,EAAAuD,EAAAI,EAAA7D,EAAA8D,EAAA,OAAA7B,EAAAC,EAAAI,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OACHvC,EAAgBK,EAAKjB,MAArBY,aACAuD,EAAQpB,EAARoB,MAEAI,EAAWJ,EAAIO,MAAM,KACrBhE,EAAW6D,EAASA,EAASjC,OAAS,GAC5C1B,EAAYyB,KAAK3B,KAGH8D,EACVzB,EADFe,SAAYU,SAGd5D,EAAYyB,KAAKmC,IAEnBvD,EAAK0C,SAAS,CAAE/C,gBAdL,wBAAA6D,EAAArB,SAAAkB,8DAiBbK,aAAe,SAAAC,GAAwB,IAArB7B,EAAqB6B,EAArB7B,KAAMvC,EAAeoE,EAAfpE,SAChBqE,EAAsB,cAAd9B,EAAK+B,KACbC,EAAsB,cAAdhC,EAAK+B,KACbE,EAASjC,EAAKkC,KAAO,KAAO,KAAO,EACzC,GAAKJ,GAAUE,EAMR,GAAKC,EAEL,CAGL,GAFA/D,EAAK0C,SAAS,CAAEnD,aAED,SADIuC,EAAXf,OACe,KAEPwC,EACVzB,EADFe,SAAYU,SAEdvD,EAAK0C,SAAS,CAAEjD,SAAU8D,UAR5BvC,sBAAoBwB,MAAM,+BAAgC,QAAS,UANnExB,sBAAoBwB,MAClB,mCACA,QACA,QAiBNyB,OAAS,SAACC,GAAM,IACNhE,EAASF,EAAKC,MAAdC,KACFiE,EAAOjE,EAAKkE,cAAc,QAChC,GAAoB,IAAhBD,EAAK9C,OAAT,CAHc,IAORgD,EADerE,EAAKjB,MAAlBa,SACwB0E,OAAO,SAACC,EAAOC,GAAR,OAAkBA,IAAUN,IACnElE,EAAK0C,SAAS,iBAAO,CAAE9C,SAAUyE,KACjCnE,EAAKuE,eAAe,CAClBN,KAAMA,EAAKG,OAAO,SAAAI,GAAG,OAAIA,IAAQR,UAIrCS,IAAM,WAAM,IACFzE,EAASF,EAAKC,MAAdC,KAGF0E,EADO1E,EAAKkE,cAAc,QACVS,OAAOhG,KAE7BqB,EAAKuE,eAAe,CAClBN,KAAMS,6EAID,IAAAE,EAAAxC,KAAAyC,EACsCzC,KAAKrC,MAAMC,KAAhD8E,EADDD,EACCC,kBAAmBZ,EADpBW,EACoBX,cADpBa,EAIH3C,KAAKvD,MADPQ,EAHK0F,EAGL1F,SAAUF,EAHL4F,EAGK5F,eAAgBK,EAHrBuF,EAGqBvF,IAEtBwF,GALCD,EAG0BrF,SAEV,CACrBuF,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,OAGVG,EACJC,EAAA9D,EAAA+D,cAAA,WACED,EAAA9D,EAAA+D,cAACC,EAAA,EAAD,CAAM9B,KAAK,SACX4B,EAAA9D,EAAA+D,cAAA,OAAKE,UAAU,mBAAf,WAeJZ,EAAkB,OAAQ,CAAEa,aAAc,KAC1C,IAAM1B,EAAOC,EAAc,QACrB0B,EAAY3B,EAAK7C,IAAI,SAAC4C,EAAGM,GAAJ,OACzBiB,EAAA9D,EAAA+D,cAAChH,EAAD8C,OAAAuE,OAAA,GACMb,EADN,CAEEc,MAAiB,IAAVxB,EAAc,WAAa,IAClCyB,UAAU,EACVvB,IAAKP,EAAKK,KAETQ,EAAiB,YAAAH,OAAaV,EAAKK,GAAlB,KAA6B,CAC7C0B,gBAAiB,CAAC,WAAY,UAC9BC,MAAO,CAAC,CACNF,UAAU,EACVG,YAAY,EACZxF,QAAS,gDALZoE,CAQCS,EAAA9D,EAAA+D,cAACW,EAAA,EAAD,CAAOC,YAAY,UAAUC,MAAO,CAAEC,MAAO,MAAOC,YAAa,MAElEtC,EAAK9C,OAAS,EACboE,EAAA9D,EAAA+D,cAACC,EAAA,EAAD,CACEC,UAAU,wBACV/B,KAAK,iBACL6C,QAAS,kBAAM5B,EAAKb,OAAOC,MAE3B,QAGR,OACEuB,EAAA9D,EAAA+D,cAACiB,EAAA,EAAD,CAAMf,UAAU,UAAUgB,MAAM,oBAC9BnB,EAAA9D,EAAA+D,cAACmB,EAAA,EAAD,CAAMC,SAAUxE,KAAKzC,cACnB4F,EAAA9D,EAAA+D,cAAChH,EAAD8C,OAAAuE,OAAA,GAAcb,EAAd,CAA8Bc,MAAM,UAClCP,EAAA9D,EAAA+D,cAACqB,EAAA,EAAD,CACEC,OAAO,2BACPC,SAAS,eACT1H,SAAUA,EACV2H,UAAW5E,KAAKW,cAChBkE,SAAU7E,KAAKoB,aACf0D,iBAAe,EACfC,SAAU/E,KAAKc,WACfkE,OAAO,aAEN/H,EAAS8B,QAAU,EAAI,KAAOmE,GAEjCC,EAAA9D,EAAA+D,cAAC6B,EAAA,EAAD,CACEC,QAASnI,EACToI,OAAQ,KACRC,SAAUpF,KAAKU,cAEfyC,EAAA9D,EAAA+D,cAAA,OACEiC,IAAI,UACJpB,MAAO,CAAEC,MAAO,QAChBoB,IAAG,yBAAA/C,OAA2BnF,OAIpC+F,EAAA9D,EAAA+D,cAAChH,EAAD8C,OAAAuE,OAAA,GAAcb,EAAd,CAA8Bc,MAAOP,EAAA9D,EAAA+D,cAAA,uBAClCV,EAAkB,QAAS,CAC1BmB,MAAO,CACL,CACEF,UAAU,EACVrF,QAAS,4BAEX,CACEiH,IAAK,GACLjH,QAAS,sBARdoE,CAWES,EAAA9D,EAAA+D,cAACW,EAAA,EAAD,QAELZ,EAAA9D,EAAA+D,cAAChH,EAAD8C,OAAAuE,OAAA,GAAcb,EAAd,CAA8Bc,MAAOP,EAAA9D,EAAA+D,cAAA,6BAClCV,EAAkB,cAAe,CAChCmB,MAAO,CACL,CACE0B,IAAK,IACLjH,QAAS,uBAJdoE,CAOES,EAAA9D,EAAA+D,cAACoC,EAAAnG,EAAD,CAAUoG,KAAM,MAErBtC,EAAA9D,EAAA+D,cAAChH,EAAD8C,OAAAuE,OAAA,GAAcb,EAAd,CAA8Bc,MAAOP,EAAA9D,EAAA+D,cAAA,kCAClCV,EAAkB,QAAS,CAC1BmB,MAAO,CACL,CACEF,UAAU,EACVrF,QAAS,4BAEX,CACEiH,IAAK,GACLjH,QAAS,sBARdoE,CAWES,EAAA9D,EAAA+D,cAACW,EAAA,EAAD,QAELZ,EAAA9D,EAAA+D,cAAChH,EAAD8C,OAAAuE,OAAA,GAAcb,EAAd,CAA8Bc,MAAOP,EAAA9D,EAAA+D,cAAA,0BAClCV,EAAkB,WAAY,CAC7BmB,MAAO,CACL,CACEF,UAAU,EACVrF,QAAS,+BAEX,CACEiH,IAAK,GACLjH,QAAS,sBARdoE,CAWES,EAAA9D,EAAA+D,cAACW,EAAA,EAAD,QAELZ,EAAA9D,EAAA+D,cAAChH,EAAD8C,OAAAuE,OAAA,GAAcb,EAAd,CAA8Bc,MAAOP,EAAA9D,EAAA+D,cAAA,gCAClCV,EAAkB,MAAO,CACxBmB,MAAO,CACL,CACE0B,IAAK,GACLjH,QAAS,sBAJdoE,CAOES,EAAA9D,EAAA+D,cAACW,EAAA,EAAD,QAELZ,EAAA9D,EAAA+D,cAAChH,EAAD8C,OAAAuE,OAAA,GAAcb,EAAd,CAA8Bc,MAAOP,EAAA9D,EAAA+D,cAAA,yBAClCV,EAAkB,UAAlBA,CAA6BS,EAAA9D,EAAA+D,cAACsC,EAAA,EAAD,iCAG/BlC,EAEDL,EAAA9D,EAAA+D,cAAChH,EAAD8C,OAAAuE,OAAA,GAAcb,EAAd,CAA8Bc,MAAOP,EAAA9D,EAAA+D,cAAA,YAAOI,EAAUzE,OAAS,EAAI,WAAa,MAC9EoE,EAAA9D,EAAA+D,cAACuC,EAAA,EAAD,CAAQpE,KAAK,SAAS6C,QAASpE,KAAKqC,IAAK4B,MAAO,CAAEC,MAAO,QACvDf,EAAA9D,EAAA+D,cAACC,EAAA,EAAD,CAAM9B,KAAK,SADb,qBAIF4B,EAAA9D,EAAA+D,cAAChH,EA7IoB,CACzB6G,WAAY,CACVH,GAAI,CACFC,KAAM,GACN6C,OAAQ,GAEV5C,GAAI,CACFD,KAAM,GACN6C,OAAQ,KAsINzC,EAAA9D,EAAA+D,cAACuC,EAAA,EAAD,CAAQpE,KAAK,UAAUsE,SAAS,UAAhC,YAKJ1C,EAAA9D,EAAA+D,cAAC0C,EAAA,sBAAD,cAhTmBC,aAsTrBC,EAAmB3J,IAAK4J,QAAL5J,CAAcG,GACxBwJ","file":"static/js/93.659291a9.chunk.js","sourcesContent":["/* eslint-disable camelcase */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable no-console */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Button, Card, Form, Input, Icon, Upload, Modal, Checkbox,\r\n} from 'antd';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nconst FormItem = Form.Item;\r\nlet id = 0;\r\nclass Registration extends Component {\r\n  state = {\r\n    footer_description: '',\r\n    mobile: '',\r\n    email: '',\r\n    logo: '',\r\n    copyrighrs: '',\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    fileList: [],\r\n    inputVisible: false,\r\n    fileName: '',\r\n    pic: 'noPic.jpg',\r\n    removedFile: [],\r\n    features: [],\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        const {\r\n          removedFile, fileName,\r\n        } = this.state;\r\n        values.image = fileName;\r\n\r\n        axios\r\n          .post('/api/v2/pricingPlans', values)\r\n          .then((result) => {\r\n            const {\r\n              data: { message },\r\n              statusText,\r\n            } = result;\r\n            if (result.status === 200) {\r\n              NotificationManager.success(message, 'SUCCESS', 2000);\r\n              setTimeout(() => {\r\n                this.props.history.push('/admin/pricing/view');\r\n              }, 3000);\r\n              if (removedFile.length) {\r\n                removedFile.map(async (file) => {\r\n                  await axios.post('/api/v2/files/removeFile', { pic: file });\r\n                });\r\n              }\r\n            } else {\r\n              NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({ loading: false }, () => {\r\n              const {\r\n                data: { message: errorMessage },\r\n                statusText: statusMessage,\r\n              } = error.response;\r\n              NotificationManager.error(errorMessage || statusMessage, 'ERROR', 2000);\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  removeFile = async (file) => {\r\n    const { removedFile } = this.state;\r\n    const { url } = file;\r\n    if (url) {\r\n      const urlSplit = url.split('/');\r\n      const fileName = urlSplit[urlSplit.length - 1];\r\n      removedFile.push(fileName);\r\n    } else {\r\n      const {\r\n        response: { fullName },\r\n      } = file;\r\n\r\n      removedFile.push(fullName);\r\n    }\r\n    this.setState({ removedFile });\r\n  };\r\n\r\n  handleChange = ({ file, fileList }) => {\r\n    const isJPG = file.type === 'image/svg';\r\n    const isPNG = file.type === 'image/png';\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isJPG && !isPNG) {\r\n      NotificationManager.error(\r\n        'You can only upload image files!',\r\n        'ERROR',\r\n        2000,\r\n      );\r\n    } else if (!isLt2M) {\r\n      NotificationManager.error('Image must smaller than 2MB!', 'ERROR', 2000);\r\n    } else {\r\n      this.setState({ fileList });\r\n      const { status } = file;\r\n      if (status === 'done') {\r\n        const {\r\n          response: { fullName },\r\n        } = file;\r\n        this.setState({ fileName: fullName });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  remove = (k) => {\r\n    const { form } = this.props;\r\n    const keys = form.getFieldValue('keys');\r\n    if (keys.length === 1) {\r\n      return;\r\n    }\r\n    const { features } = this.state;\r\n    const filterFeatures = features.filter((value, index) => index !== k);\r\n    this.setState(() => ({ features: filterFeatures }));\r\n    form.setFieldsValue({\r\n      keys: keys.filter(key => key !== k),\r\n    });\r\n  }\r\n\r\n  add = () => {\r\n    const { form } = this.props;\r\n\r\n    const keys = form.getFieldValue('keys');\r\n    const nextKeys = keys.concat(id++);\r\n\r\n    form.setFieldsValue({\r\n      keys: nextKeys,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const {\r\n      fileList, previewVisible, pic, features,\r\n    } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    getFieldDecorator('keys', { initialValue: [] });\r\n    const keys = getFieldValue('keys');\r\n    const formItems = keys.map((k, index) => (\r\n      <FormItem\r\n        {...formItemLayout}\r\n        label={index === 0 ? 'Features' : ' '}\r\n        required={false}\r\n        key={keys[index]}\r\n      >\r\n        {getFieldDecorator(`features[${keys[index]}]`, {\r\n          validateTrigger: ['onChange', 'onBlur'],\r\n          rules: [{\r\n            required: true,\r\n            whitespace: true,\r\n            message: 'Please input feature or delete this field.',\r\n          }],\r\n        })(\r\n          <Input placeholder=\"Feature\" style={{ width: '40%', marginRight: 8 }} />,\r\n        )}\r\n        {keys.length > 0 ? (\r\n          <Icon\r\n            className=\"dynamic-delete-button\"\r\n            type=\"minus-circle-o\"\r\n            onClick={() => this.remove(k)}\r\n            />\r\n        ) : null}\r\n      </FormItem>\r\n    ));\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Add Pricing Plan\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem {...formItemLayout} label=\"Image\">\r\n            <Upload\r\n              action=\"/api/v2/files/uploadFile\"\r\n              listType=\"picture-card\"\r\n              fileList={fileList}\r\n              onPreview={this.handlePreview}\r\n              onChange={this.handleChange}\r\n              withCredentials\r\n              onRemove={this.removeFile}\r\n              accept=\".png,.svg\"\r\n            >\r\n              {fileList.length >= 1 ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n              visible={previewVisible}\r\n              footer={null}\r\n              onCancel={this.handleCancel}\r\n            >\r\n              <img\r\n                alt=\"example\"\r\n                style={{ width: '100%' }}\r\n                src={`/api/v2/files/getFile/${pic}`}\r\n              />\r\n            </Modal>\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Title</span>}>\r\n            {getFieldDecorator('title', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter the title !',\r\n                },\r\n                {\r\n                  max: 30,\r\n                  message: 'Max is 30 Letter',\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Description</span>}>\r\n            {getFieldDecorator('description', {\r\n              rules: [\r\n                {\r\n                  max: 150,\r\n                  message: 'Max is 150 Letter',\r\n                },\r\n              ],\r\n            })(<TextArea rows={4} />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Price - Currency</span>}>\r\n            {getFieldDecorator('price', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter the price !',\r\n                },\r\n                {\r\n                  max: 15,\r\n                  message: 'Max is 15 Letter',\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Interval</span>}>\r\n            {getFieldDecorator('interval', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter the interval !',\r\n                },\r\n                {\r\n                  max: 15,\r\n                  message: 'Max is 15 Letter',\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Call To Action</span>}>\r\n            {getFieldDecorator('cta', {\r\n              rules: [\r\n                {\r\n                  max: 15,\r\n                  message: 'Max is 15 Letter',\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Primary</span>}>\r\n            {getFieldDecorator('primary')(<Checkbox>Mark As Primary Plan ?</Checkbox>)}\r\n          </FormItem>\r\n\r\n          {formItems}\r\n\r\n          <FormItem {...formItemLayout} label={<span>{formItems.length < 1 ? 'Features' : ''}</span>}>\r\n            <Button type=\"dashed\" onClick={this.add} style={{ width: '40%' }}>\r\n              <Icon type=\"plus\" /> Add New Feature\r\n            </Button>\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n        <NotificationContainer />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default RegistrationForm;\r\n"],"sourceRoot":""}