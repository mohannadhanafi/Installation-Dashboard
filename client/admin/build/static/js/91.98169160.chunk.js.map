{"version":3,"sources":["routes/Posts/EditPost/index.jsx"],"names":["FormItem","Form","Item","Option","Select","TextArea","Input","Registration","state","confirmDirty","autoCompleteResult","editorState","EditorState","createEmpty","fileList","previewVisible","previewImage","values","categories","removedFile","checked","content","headingLength","tags","inputVisible","inputValue","breakingNews","componentDidMount","_callee3","id","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","wrap","_context3","prev","next","_this","props","match","params","Number","isInteger","parseInt","axios","get","concat","then","_ref2","Object","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","mark","_callee2","result","data","finalData","header_media","hero","description","approve","breaking","allCategories","heading","headingArray","getPhotos","_context2","setState","sent","map","_ref3","_callee","value","_context","push","uid","uuid","name","status","url","catch","error","stop","_x2","apply","this","arguments","Promise","all","length","_x","_error$response","response","errorMessage","message","errorText","statusText","NotificationManager","setTimeout","history","handleChange","_ref4","file","fullName","toggleDisable","disabled","handleSubmit","e","preventDefault","_this$state","files","urlSplit","split","fileName","trim","form","validateFieldsAndScroll","err","post","loading","success","_ref5","_callee4","_context4","pic","_x3","_ref6","_callee5","_error$response2","_context5","_x4","removeFile","_callee6","_context6","handleConfirmBlur","target","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","domain","handleClose","removedTag","filter","tag","showInput","input","focus","handleInputChange","handleInputConfirm","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","indexOf","E_Mohannad_snackcontent_Informative_Dash_client_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","onChangeBreaking","onChangeCheck","onEditorStateChange","handleEditorChange","getContent","handlePreview","thumbUrl","editorChange","evt","newContent","editor","getData","saveInputRef","initialValue","_this2","getFieldDecorator","_this$state2","role","title","seo","post_intro","category","user","category_id","uploadButton","react__WEBPACK_IMPORTED_MODULE_9___default","createElement","antd__WEBPACK_IMPORTED_MODULE_13__","type","className","formItemLayout","labelCol","xs","span","sm","wrapperCol","antd__WEBPACK_IMPORTED_MODULE_14__","antd__WEBPACK_IMPORTED_MODULE_10__","onSubmit","assign","label","antd__WEBPACK_IMPORTED_MODULE_15__","antd__WEBPACK_IMPORTED_MODULE_12__","rules","max","whitespace","rows","antd__WEBPACK_IMPORTED_MODULE_16__","action","listType","onPreview","onChange","withCredentials","onRemove","antd__WEBPACK_IMPORTED_MODULE_17__","visible","footer","onCancel","handleCancel","alt","style","width","src","antd__WEBPACK_IMPORTED_MODULE_11__","cat","_tinymce_tinymce_react__WEBPACK_IMPORTED_MODULE_25__","init","images_upload_url","images_upload_base_path","image_caption","images_upload_handler","blobInfo","failure","formData","FormData","append","blob","height","image_title","automatic_uploads","file_picker_types","images_upload_credentials","plugins","toolbar","isLongTag","tagElem","antd__WEBPACK_IMPORTED_MODULE_18__","key","closable","afterClose","slice","ref","size","onBlur","onPressEnter","onClick","background","borderStyle","antd__WEBPACK_IMPORTED_MODULE_19__","color","offset","antd__WEBPACK_IMPORTED_MODULE_20__","htmlType","react_notifications__WEBPACK_IMPORTED_MODULE_22__","Component","RegistrationForm","create","connect","_ref8","auth","authUser"],"mappings":"wXAoCMA,EAAWC,IAAKC,KACdC,EAAWC,IAAXD,OACAE,EAAaC,IAAbD,SAEFE,6MACJC,MAAQ,CACNC,cAAc,EACdC,mBAAoB,GACpBC,YAAaC,cAAYC,cACzBC,SAAU,GACVC,gBAAgB,EAChBC,aAAc,GACdC,OAAQ,GACRC,WAAY,GACZC,YAAa,GACbC,SAAS,EACTC,QAAS,GACTC,cAAe,GACfC,KAAM,GACNC,cAAc,EACdC,WAAY,GACZC,cAAc,KAGhBC,uCAAoB,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,QAGJN,EAEVO,EAAKC,MAHPC,MACEC,OAAUV,KAGJW,OAAOC,UAAUC,SAASb,EAAI,KACtCc,IACGC,IADH,gBAAAC,OACuBhB,IACpBiB,KAFH,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAlB,EAAAC,EAAAmB,KAEQ,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnC,EAAAoC,EAAAC,EAAAC,EAAAC,EAAA5C,EAAAJ,EAAAiD,EAAA,OAAAjC,EAAAC,EAAAC,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cACIkB,EAASD,EAATC,KACFC,EAAYD,EAAK,GAErBE,EAMED,EANFC,aACAC,EAKEF,EALFE,KACAC,EAIEH,EAJFG,YACAC,EAGEJ,EAHFI,QACAnC,EAEE+B,EAFF/B,KACAoC,EACEL,EADFK,SAEFvB,EAAK6B,SAAS,CAAE7C,QAASoC,EAAM9B,aAAciC,IAXzCK,EAAA7B,KAAA,EAYwBQ,IAAMC,IAAI,sBAZlC,cAYEgB,EAZFI,EAAAE,KAAAF,EAAA7B,KAAA,EAakBQ,IAAMC,IAAI,mBAb5B,cAaEiB,EAbFG,EAAAE,KAcUJ,EAAiBD,EAAvBR,KACMnC,EAAe0C,EAArBP,KACFvC,EAAW,GACXiD,EAAYR,EAAaY,IAAb,eAAAC,EAAApB,OAAAC,EAAA,EAAAD,CAAAlB,EAAAC,EAAAmB,KAAiB,SAAAmB,EAAOC,GAAP,OAAAxC,EAAAC,EAAAC,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAApC,KAAA,EAC3BQ,IACHC,IADG,yBAAAC,OAC0ByB,IAC7BxB,KAAK,SAAAM,GAAM,OAAItC,EAAS0D,KAAK,CAC5BC,IAAKC,MACLC,KAAM,YACNC,OAAQ,OACRC,IAAG,yBAAAhC,OAA2ByB,OAE/BQ,MAAM,SAACC,MATuB,wBAAAR,EAAAS,SAAAX,MAAjB,gBAAAY,GAAA,OAAAb,EAAAc,MAAAC,KAAAC,YAAA,IAjBdpB,EAAA7B,KAAA,GA4BEkD,QAAQC,IAAIvB,GAAWjB,KAAK,WAChCV,EAAK6B,SAAS,CACZhD,OAAQqC,EACRxC,WACAI,aACAG,QAASoC,EACTnC,cAAewC,EAAayB,OAC5B7B,UACAnC,WApCA,yBAAAyC,EAAAgB,SAAA7B,MAFR,gBAAAqC,GAAA,OAAAzC,EAAAmC,MAAAC,KAAAC,YAAA,IA0CGN,MAAM,SAACC,GAAU,IAAAU,EAIZV,EAAMW,SAFSC,EAFHF,EAEdpC,KAAQuC,QACIC,EAHEJ,EAGdK,WAEFC,sBAAoBhB,MAAMY,GAAgBE,EAAW,QAAS,KAC9DG,WAAW,WACT5D,EAAKC,MAAM4D,QAAQzB,KAAK,+BACvB,OAGPpC,EAAKC,MAAM4D,QAAQzB,KAAK,8BA5DR,wBAAAvC,EAAA+C,SAAApD,QAgEpBsE,aAAe,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMtF,EAAeqF,EAAfrF,SAGtB,GAFAsB,EAAK6B,SAAS,CAAEnD,aAED,SADIsF,EAAXxB,OACe,KAEPyB,EACVD,EADFV,SAAYW,SAEdjE,EAAK6B,SAAS,CAAEoC,iBAIpBC,cAAgB,WACdlE,EAAK6B,SAAS,CAAEsC,UAAWnE,EAAK5B,MAAM+F,cAGxCC,aAAe,SAACC,GACdA,EAAEC,iBADkB,IAAAC,EAGoBvE,EAAK5B,MAArCM,EAHY6F,EAGZ7F,SAAUK,EAHEwF,EAGFxF,YAAaI,EAHXoF,EAGWpF,KACzBqF,EAAQ,GAgBd,GAfA9F,EAASqD,IAAI,SAACiC,GAAS,IACbvB,EAAQuB,EAARvB,IACR,IAAIA,EAIG,KAESwB,EACVD,EADFV,SAAYW,SAId,OADAO,EAAMpC,KAAK6B,GACJO,EATP,IAAMC,EAAWhC,EAAIiC,MAAM,KACrBC,EAAWF,EAASA,EAAStB,OAAS,GAC5CqB,EAAMpC,KAAKuC,KAUM,IAAjBH,EAAMrB,OAAc,KACdlE,EAAYe,EAAK5B,MAAjBa,QACJA,EAAQ2F,QACV5E,EAAKC,MAAM4E,KAAKC,wBAAwB,SAACC,EAAKlG,GAC5C,IAAKkG,EAAK,KAGMtF,EAEVO,EAAKC,MAHPC,MACEC,OAAUV,GAGdZ,EAAOsC,aAAeqD,EACtB3F,EAAOwC,YAAcpC,EACrBJ,EAAOM,KAAOA,EACdoB,IACGyE,KAAK,sBAAuB,CAC3B/D,KAAMpC,EACNsB,OAAQ,CAAEV,QAEXiB,KAAK,SAACM,GAAW,IAENwC,EAGNxC,EAHFC,KAAQuC,QACRE,EAEE1C,EAFF0C,WAGa,MADX1C,EADFwB,QAGAxC,EAAK6B,SAAS,CAAEoD,SAAS,GAAS,WAChCtB,sBAAoBuB,QAAQ1B,EAAS,UAAW,KAChDI,WAAW,WACT5D,EAAKC,MAAM4D,QAAQzB,KAAK,+BACvB,OAEDrD,EAAYoE,QACdpE,EAAYgD,IAAZ,eAAAoD,EAAAvE,OAAAC,EAAA,EAAAD,CAAAlB,EAAAC,EAAAmB,KAAgB,SAAAsE,EAAOpB,GAAP,OAAAtE,EAAAC,EAAAC,KAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,cAAAsF,EAAAtF,KAAA,EACRQ,IAAMyE,KAAK,2BAA4B,CAAEM,IAAKtB,IADtC,wBAAAqB,EAAAzC,SAAAwC,MAAhB,gBAAAG,GAAA,OAAAJ,EAAArC,MAAAC,KAAAC,YAAA,KAKFhD,EAAK6B,SAAS,CAAEoD,SAAS,GAAS,WAChCtB,sBAAoBhB,MAClBa,GAAWE,EACX,QACA,SAKPhB,MAjCH,eAAA8C,EAAA5E,OAAAC,EAAA,EAAAD,CAAAlB,EAAAC,EAAAmB,KAiCS,SAAA2E,EAAO9C,GAAP,IAAA+C,EAAAlC,EAAAE,EAAA,OAAAhE,EAAAC,EAAAC,KAAA,SAAA+F,GAAA,cAAAA,EAAA7F,KAAA6F,EAAA5F,MAAA,OAAA2F,EAID/C,EAAMW,SAFAE,EAFLkC,EAEHzE,KAAQuC,QACRE,EAHGgC,EAGHhC,WAEFC,sBAAoBhB,MAAMa,GAAWE,EAAY,QAAS,KALrD,wBAAAiC,EAAA/C,SAAA6C,MAjCT,gBAAAG,GAAA,OAAAJ,EAAA1C,MAAAC,KAAAC,YAAA,YA4CNW,sBAAoBhB,MAClB,iCACA,QACA,QAKNkD,iDAAa,SAAAC,EAAO9B,GAAP,IAAAjF,EAAA0D,EAAAgC,EAAAE,EAAAV,EAAA,OAAAvE,EAAAC,EAAAC,KAAA,SAAAmG,GAAA,cAAAA,EAAAjG,KAAAiG,EAAAhG,MAAA,OACHhB,EAAgBiB,EAAK5B,MAArBW,aACA0D,EAAQuB,EAARvB,MAEAgC,EAAWhC,EAAIiC,MAAM,KACrBC,EAAWF,EAASA,EAAStB,OAAS,GAC5CpE,EAAYqD,KAAKuC,KAGHV,EACVD,EADFV,SAAYW,SAGdlF,EAAYqD,KAAK6B,IAEnBjE,EAAK6B,SAAS,CAAE9C,gBAdL,wBAAAgH,EAAAnD,SAAAkD,8DAiBbE,kBAAoB,SAAC3B,GAAM,IACjBnC,EAAUmC,EAAE4B,OAAZ/D,MACRlC,EAAK6B,SAAS,CAAExD,aAAc2B,EAAK5B,MAAMC,gBAAkB6D,OAG7DgE,uBAAyB,SAACC,EAAMjE,EAAOkE,GAAa,IAC1CvB,EAAS7E,EAAKC,MAAd4E,KACJ3C,GAASA,IAAU2C,EAAKwB,cAAc,YACxCD,EAAS,iDAETA,OAIJE,uBAAyB,SAACH,EAAMjE,EAAOkE,GAAa,IAC1CvB,EAAS7E,EAAKC,MAAd4E,KACJ3C,GAASlC,EAAK5B,MAAMC,cACtBwG,EAAK0B,eAAe,CAAC,WAAY,CAAEC,OAAO,IAE5CJ,OAGFK,oBAAsB,SAACvE,GACrB,IAAI5D,EAIFA,EAHG4D,EAGkB,CAAC,OAAQ,OAAQ,QAAQH,IAC5C,SAAA2E,GAAM,SAAAjG,OAAOyB,GAAPzB,OAAeiG,KAHF,GAMvB1G,EAAK6B,SAAS,CAAEvD,0BAGlBqI,YAAc,SAACC,GACb,IAAMzH,EAAOa,EAAK5B,MAAMe,KAAK0H,OAAO,SAAAC,GAAG,OAAIA,IAAQF,IACnD5G,EAAK6B,SAAS,CAAE1C,YAGlB4H,UAAY,WACV/G,EAAK6B,SAAS,CAAEzC,cAAc,GAAQ,kBAAMY,EAAKgH,MAAMC,aAGzDC,kBAAoB,SAAC7C,GACnBrE,EAAK6B,SAAS,CAAExC,WAAYgF,EAAE4B,OAAO/D,WAGvCiF,mBAAqB,WAAM,IACjB/I,EADiBwC,OAAAwG,EAAA,EAAAxG,QAAAwG,EAAA,EAAAxG,CAAAZ,IACjB5B,MACAiB,EAAejB,EAAfiB,WACFF,EAASf,EAATe,KACFE,IAA4C,IAA9BF,EAAKkI,QAAQhI,KAC7BF,EAAI,GAAAsB,OAAAG,OAAA0G,EAAA,EAAA1G,CAAOzB,GAAP,CAAaE,KAEnBW,EAAK6B,SAAS,CACZ1C,OACAC,cAAc,EACdC,WAAY,QAIhBkI,iBAAmB,WACjBvH,EAAK6B,SAAS,CAAEvC,cAAeU,EAAK5B,MAAMkB,kBAG5CkI,cAAgB,WACdxH,EAAK6B,SAAS,CAAE7C,SAAUgB,EAAK5B,MAAMY,aAGvCyI,oBAAsB,SAAClJ,GACrByB,EAAK6B,SAAS,CACZtD,mBAIJmJ,mBAAqB,SAACrD,GACpB,IAAMpF,EAAUoF,EAAE4B,OAAO0B,aACzB3H,EAAK6B,SAAS,iBAAO,CAAE5C,gBAGzB2I,cAAgB,SAAC5D,GACfhE,EAAK6B,SAAS,CACZjD,aAAcoF,EAAKvB,KAAOuB,EAAK6D,SAC/BlJ,gBAAgB,OAIpBmJ,aAAe,SAACC,GACd,IAAMC,EAAaD,EAAIE,OAAOC,UAC9BlI,EAAK6B,SAAS,CACZ5C,QAAS+I,OAIbG,aAAe,SAAAnB,GAAK,OAAKhH,EAAKgH,MAAQA,2EAE7B,IA4BHoB,EA5BGC,EAAAtF,KACCuF,EAAsBvF,KAAK9C,MAAM4E,KAAjCyD,kBADDC,EAYHxF,KAAK3E,MATPO,EAHK4J,EAGL5J,eACAD,EAJK6J,EAIL7J,SACAG,EALK0J,EAKL1J,OACAC,EANKyJ,EAMLzJ,WACAK,EAPKoJ,EAOLpJ,KACAC,EARKmJ,EAQLnJ,aACAC,EATKkJ,EASLlJ,WACAJ,EAVKsJ,EAULtJ,QAGMuJ,GAbDD,EAWLjJ,aAEeyD,KAAK9C,MAAduI,MACAtJ,EAAkB6D,KAAK3E,MAAvBc,cAENuJ,EAUE5J,EAVF4J,MACAnD,EASEzG,EATFyG,IACAoD,EAQE7J,EARF6J,IAEAC,GAME9J,EAPFwC,YAOExC,EANF8J,YAEAC,GAIE/J,EALFgK,KAKEhK,EAJF+J,UACAxH,EAGEvC,EAHFuC,KACA0H,EAEEjK,EAFFiK,YACAxH,EACEzC,EADFyC,QAIEsH,IACFR,EAAeU,GAEjB,IAAMC,EACJC,EAAArJ,EAAAsJ,cAAA,WACED,EAAArJ,EAAAsJ,cAACC,EAAA,EAAD,CAAMC,KAAK,SACXH,EAAArJ,EAAAsJ,cAAA,OAAKG,UAAU,mBAAf,WAIEC,EAAiB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAgBhB,OACER,EAAArJ,EAAAsJ,cAACU,EAAA,EAAD,CAAMP,UAAU,UAAUX,MAAM,gBAC9BO,EAAArJ,EAAAsJ,cAACW,EAAA,EAAD,CAAMC,SAAU9G,KAAKqB,cACnB4E,EAAArJ,EAAAsJ,cAACrL,EAADgD,OAAAkJ,OAAA,GACMT,EADN,CAEEU,MACEf,EAAArJ,EAAAsJ,cAAA,wBAEED,EAAArJ,EAAAsJ,cAACe,EAAA,EAAD,CAASvB,MAAM,iCACbO,EAAArJ,EAAAsJ,cAACC,EAAA,EAAD,CAAMC,KAAK,0BAKhBb,EAAkB,QAAS,CAC1BF,aAAcK,GADfH,CAEEU,EAAArJ,EAAAsJ,cAACgB,EAAA,EAAD,QAELjB,EAAArJ,EAAAsJ,cAACrL,EAADgD,OAAAkJ,OAAA,GAAcT,EAAd,CAA8BU,MAAOf,EAAArJ,EAAAsJ,cAAA,0BAClCX,EAAkB,MAAO,CACxBF,aAAcM,EACdwB,MAAO,CACL,CACEC,IAAK,GACL3G,QAAS,4BACT4G,YAAY,KANjB9B,CASEU,EAAArJ,EAAAsJ,cAACgB,EAAA,EAAD,QAELjB,EAAArJ,EAAAsJ,cAACrL,EAADgD,OAAAkJ,OAAA,GAAcT,EAAd,CAA8BU,MAAOf,EAAArJ,EAAAsJ,cAAA,mCAClCX,EAAkB,aAAc,CAC/BF,aAAcO,EACduB,MAAO,CACL,CACEC,IAAK,IACL3G,QAAS,+BACT4G,YAAY,KANjB9B,CASEU,EAAArJ,EAAAsJ,cAAChL,EAAD,CAAUoM,KAAM,MAErBrB,EAAArJ,EAAAsJ,cAACrL,EAADgD,OAAAkJ,OAAA,GAAcT,EAAd,CAA8BU,MAAM,iBAClCf,EAAArJ,EAAAsJ,cAACqB,EAAA,EAAD,CACEC,OAAO,2BACPC,SAAS,eACT9L,SAAUA,EACV+L,UAAW1H,KAAK6E,cAChB8C,SAAU3H,KAAKe,aACf6G,iBAAe,EACfC,SAAU7H,KAAK8C,YAEdnH,EAASyE,QAAU,EAAI,KAAO4F,GAEjCC,EAAArJ,EAAAsJ,cAAC4B,EAAA,EAAD,CACEC,QAASnM,EACToM,OAAQ,KACRC,SAAUjI,KAAKkI,cAEfjC,EAAArJ,EAAAsJ,cAAA,OACEiC,IAAI,UACJC,MAAO,CAAEC,MAAO,QAChBC,IAAG,yBAAA5K,OAA2B6E,OAIpC0D,EAAArJ,EAAAsJ,cAACrL,EAADgD,OAAAkJ,OAAA,GAAcT,EAAd,CAA8BU,MAAOf,EAAArJ,EAAAsJ,cAAA,0BAClCX,EAAkB,cAAe,CAChCF,gBADDE,CAGCU,EAAArJ,EAAAsJ,cAACqC,EAAA,EAAD,KACGxM,EAAWqE,QACPrE,EAAWiD,IAAI,SAAAwJ,GAAG,OACnBvC,EAAArJ,EAAAsJ,cAAClL,EAAD,CAAQmE,MAAOqJ,EAAI9L,IAAK8L,EAAIhJ,WAKrCtD,EAAQkE,OACP6F,EAAArJ,EAAAsJ,cAACrL,EAADgD,OAAAkJ,OAAA,GACMT,EADN,CAEEU,MAAOf,EAAArJ,EAAAsJ,cAAA,6BACPD,EAAArJ,EAAAsJ,cAACuC,EAAA,EAAD,CACEpD,aAAcnJ,EACdwM,KAAM,CACJC,kBAAmB,2BACnBC,wBAAyB,2BACzBC,eAAe,EACfC,sBAAuB,SAACC,EAAU5G,EAAS6G,GACzC,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQJ,EAASK,QACjC5L,IAAMyE,KAAK,2BAA4BgH,GAAUtL,KAAK,SAACM,GAAW,IAChDiD,EAAejD,EAAvBC,KAAQgD,SAChBiB,EAAO,yBAAAzE,OAA0BwD,MAChCvB,MAAM,SAACC,GACRoJ,EAAQ,cAGZK,OAAQ,IACRC,aAAa,EACbC,mBAAmB,EACnBC,kBAAmB,mBACnBC,2BAA2B,EAC3BC,QAAS,qXACTC,QAAS,sOAEXhC,SAAU3H,KAAK2E,sBAGjB,KACJsB,EAAArJ,EAAAsJ,cAACrL,EAADgD,OAAAkJ,OAAA,GAAcT,EAAd,CAA8BU,MAAM,cAClCf,EAAArJ,EAAAsJ,cAAA,WACG9J,EAAK4C,IAAI,SAAC+E,GACT,IAAM6F,EAAY7F,EAAI3D,OAAS,GACzByJ,EACJ5D,EAAArJ,EAAAsJ,cAAC4D,EAAA,EAAD,CACEC,IAAKhG,EACLiG,UAAQ,EACRC,WAAY,kBAAM3E,EAAK1B,YAAYG,KAElC6F,EAAS,GAAAlM,OAAMqG,EAAImG,MAAM,EAAG,IAAnB,OAA8BnG,GAG5C,OAAO6F,EACL3D,EAAArJ,EAAAsJ,cAACe,EAAA,EAAD,CAASvB,MAAO3B,EAAKgG,IAAKhG,GACvB8F,GAGHA,IAGHxN,GACC4J,EAAArJ,EAAAsJ,cAACgB,EAAA,EAAD,CACEiD,IAAKnK,KAAKoF,aACVgB,KAAK,OACLgE,KAAK,QACLhC,MAAO,CAAEC,MAAO,IAChBlJ,MAAO7C,EACPqL,SAAU3H,KAAKmE,kBACfkG,OAAQrK,KAAKoE,mBACbkG,aAActK,KAAKoE,sBAGrB/H,GACA4J,EAAArJ,EAAAsJ,cAAC4D,EAAA,EAAD,CACES,QAASvK,KAAKgE,UACdoE,MAAO,CAAEoC,WAAY,OAAQC,YAAa,WAE1CxE,EAAArJ,EAAAsJ,cAACC,EAAA,EAAD,CAAMC,KAAK,SAJb,cASLtK,GACU,UAAT2J,EACElH,EACEpC,EAAgB,GAAKkC,EACnB4H,EAAArJ,EAAAsJ,cAACrL,EAADgD,OAAAkJ,OAAA,GACMT,EADN,CAEEU,MAAOf,EAAArJ,EAAAsJ,cAAA,8BAENX,EAAkB,OAAlBA,CACCU,EAAArJ,EAAAsJ,cAACwE,EAAA,EAAD,CACEzO,QAAS+D,KAAK3E,MAAMY,QACpB0L,SAAU3H,KAAKyE,eAFjB,uDASJwB,EAAArJ,EAAAsJ,cAACrL,EAADgD,OAAAkJ,OAAA,GACMT,EADN,CAEEU,MAAOf,EAAArJ,EAAAsJ,cAAA,8BAEPD,EAAArJ,EAAAsJ,cAAA,QAAMkC,MAAO,CAAEuC,MAAO,QAAtB,4CAJF,KAWF1E,EAAArJ,EAAAsJ,cAACrL,EAADgD,OAAAkJ,OAAA,GAAcT,EAAd,CAA8BU,MAAOf,EAAArJ,EAAAsJ,cAAA,8BACnCD,EAAArJ,EAAAsJ,cAAA,QAAMkC,MAAO,CAAEuC,MAAO,QAAtB,yBADF,KAKF,KACJ1E,EAAArJ,EAAAsJ,cAACrL,EAADgD,OAAAkJ,OAAA,GAAcT,EAAd,CAA8BU,MAAOf,EAAArJ,EAAAsJ,cAAA,+BAClCX,EAAkB,WAAlBA,CACCU,EAAArJ,EAAAsJ,cAACwE,EAAA,EAAD,CACEzO,QAAS+D,KAAK3E,MAAMkB,aACpBoL,SAAU3H,KAAKwE,kBAFjB,4DAQJyB,EAAArJ,EAAAsJ,cAACrL,EAnNoB,CACzB8L,WAAY,CACVH,GAAI,CACFC,KAAM,GACNmE,OAAQ,GAEVlE,GAAI,CACFD,KAAM,GACNmE,OAAQ,KA4MN3E,EAAArJ,EAAAsJ,cAAC2E,EAAA,EAAD,CAAQzE,KAAK,UAAU0E,SAAS,UAAhC,iBAKJ7E,EAAArJ,EAAAsJ,cAAC6E,EAAA,sBAAD,cAnjBmBC,aAkkBrBC,EAAmBnQ,IAAKoQ,QAALpQ,CAAcM,GACxB+P,sBAVS,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEzB,MAAO,CACLC,SAF8BD,EAAxBC,SAGN5L,IAH8B2L,EAAd3L,IAIhB+F,KAJ8B4F,EAAT5F,OASV0F,CAAyBF","file":"static/js/91.98169160.chunk.js","sourcesContent":["/* eslint-disable camelcase */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  Tooltip,\r\n  Upload,\r\n  Modal,\r\n  Checkbox,\r\n  Tag,\r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  NotificationManager,\r\n  NotificationContainer,\r\n} from 'react-notifications';\r\nimport { convertToRaw, EditorState } from 'draft-js';\r\nimport uuid from 'uuid';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst FormItem = Form.Item;\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n    editorState: EditorState.createEmpty(),\r\n    fileList: [],\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    values: '',\r\n    categories: [],\r\n    removedFile: [],\r\n    checked: true,\r\n    content: '',\r\n    headingLength: '',\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    breakingNews: true,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n    } = this.props;\r\n    if (id && Number.isInteger(parseInt(id, 10))) {\r\n      axios\r\n        .get(`/api/v2/post/${id}`)\r\n        .then(async (result) => {\r\n          const { data } = result;\r\n          const finalData = data[0];\r\n          const {\r\n            header_media,\r\n            hero,\r\n            description,\r\n            approve,\r\n            tags,\r\n            breaking,\r\n          } = finalData;\r\n          this.setState({ checked: hero, breakingNews: breaking });\r\n          const allCategories = await axios.get('/api/v2/categories');\r\n          const heading = await axios.get('/api/v2/heading');\r\n          const { data: headingArray } = heading;\r\n          const { data: categories } = allCategories;\r\n          const fileList = [];\r\n          const getPhotos = header_media.map(async (value) => {\r\n            await axios\r\n              .get(`/api/v2/files/getFile/${value}`)\r\n              .then(result => fileList.push({\r\n                uid: uuid(),\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: `/api/v2/files/getFile/${value}`,\r\n              }))\r\n              .catch((error) => {});\r\n          });\r\n          await Promise.all(getPhotos).then(() => {\r\n            this.setState({\r\n              values: finalData,\r\n              fileList,\r\n              categories,\r\n              content: description,\r\n              headingLength: headingArray.length,\r\n              approve,\r\n              tags,\r\n            });\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          const {\r\n            data: { message: errorMessage },\r\n            statusText: errorText,\r\n          } = error.response;\r\n          NotificationManager.error(errorMessage || errorText, 'ERROR', 2000);\r\n          setTimeout(() => {\r\n            this.props.history.push('/admin/Posts/viewPosts/all');\r\n          }, 2000);\r\n        });\r\n    } else {\r\n      this.props.history.push('/admin/Posts/viewPosts/all');\r\n    }\r\n  };\r\n\r\n  handleChange = ({ file, fileList }) => {\r\n    this.setState({ fileList });\r\n    const { status } = file;\r\n    if (status === 'done') {\r\n      const {\r\n        response: { fullName },\r\n      } = file;\r\n      this.setState({ fullName });\r\n    }\r\n  };\r\n\r\n  toggleDisable = () => {\r\n    this.setState({ disabled: !this.state.disabled });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { fileList, removedFile, tags } = this.state;\r\n    const files = [];\r\n    fileList.map((file) => {\r\n      const { url } = file;\r\n      if (url) {\r\n        const urlSplit = url.split('/');\r\n        const fileName = urlSplit[urlSplit.length - 1];\r\n        files.push(fileName);\r\n      } else {\r\n        const {\r\n          response: { fullName },\r\n        } = file;\r\n\r\n        files.push(fullName);\r\n        return files;\r\n      }\r\n    });\r\n    if (files.length !== 0) {\r\n      const { content } = this.state;\r\n      if (content.trim()) {\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n          if (!err) {\r\n            const {\r\n              match: {\r\n                params: { id },\r\n              },\r\n            } = this.props;\r\n            values.header_media = files;\r\n            values.description = content;\r\n            values.tags = tags;\r\n            axios\r\n              .post('/api/v2/post/update', {\r\n                data: values,\r\n                params: { id },\r\n              })\r\n              .then((result) => {\r\n                const {\r\n                  data: { message },\r\n                  statusText,\r\n                  status,\r\n                } = result;\r\n                if (status === 200) {\r\n                  this.setState({ loading: false }, () => {\r\n                    NotificationManager.success(message, 'SUCCESS', 2000);\r\n                    setTimeout(() => {\r\n                      this.props.history.push('/admin/Posts/viewPosts/all');\r\n                    }, 3000);\r\n                  });\r\n                  if (removedFile.length) {\r\n                    removedFile.map(async (file) => {\r\n                      await axios.post('/api/v2/files/removeFile', { pic: file });\r\n                    });\r\n                  }\r\n                } else {\r\n                  this.setState({ loading: false }, () => {\r\n                    NotificationManager.error(\r\n                      message || statusText,\r\n                      'ERROR',\r\n                      2000,\r\n                    );\r\n                  });\r\n                }\r\n              })\r\n              .catch(async (error) => {\r\n                const {\r\n                  data: { message },\r\n                  statusText,\r\n                } = error.response;\r\n                NotificationManager.error(message || statusText, 'ERROR', 2000);\r\n              });\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      NotificationManager.error(\r\n        'Please Choose image or video !',\r\n        'ERROR',\r\n        2000,\r\n      );\r\n    }\r\n  };\r\n\r\n  removeFile = async (file) => {\r\n    const { removedFile } = this.state;\r\n    const { url } = file;\r\n    if (url) {\r\n      const urlSplit = url.split('/');\r\n      const fileName = urlSplit[urlSplit.length - 1];\r\n      removedFile.push(fileName);\r\n    } else {\r\n      const {\r\n        response: { fullName },\r\n      } = file;\r\n\r\n      removedFile.push(fullName);\r\n    }\r\n    this.setState({ removedFile });\r\n  };\r\n\r\n  handleConfirmBlur = (e) => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  handleWebsiteChange = (value) => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(\r\n        domain => `${value}${domain}`,\r\n      );\r\n    }\r\n    this.setState({ autoCompleteResult });\r\n  };\r\n\r\n  handleClose = (removedTag) => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { state } = this;\r\n    const { inputValue } = state;\r\n    let { tags } = state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  onChangeBreaking = () => {\r\n    this.setState({ breakingNews: !this.state.breakingNews });\r\n  };\r\n\r\n  onChangeCheck = () => {\r\n    this.setState({ checked: !this.state.checked });\r\n  };\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  handleEditorChange = (e) => {\r\n    const content = e.target.getContent();\r\n    this.setState(() => ({ content }));\r\n  };\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  editorChange = (evt) => {\r\n    const newContent = evt.editor.getData();\r\n    this.setState({\r\n      content: newContent,\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => (this.input = input);\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const {\r\n      previewVisible,\r\n      fileList,\r\n      values,\r\n      categories,\r\n      tags,\r\n      inputVisible,\r\n      inputValue,\r\n      content,\r\n      breakingNews,\r\n    } = this.state;\r\n    const { role } = this.props;\r\n    const { headingLength } = this.state;\r\n    const {\r\n      title,\r\n      pic,\r\n      seo,\r\n      description,\r\n      post_intro,\r\n      user,\r\n      category,\r\n      hero,\r\n      category_id,\r\n      approve,\r\n    } = values;\r\n    const options = [{ label: 'Hero', value: hero }];\r\n    let initialValue;\r\n    if (category) {\r\n      initialValue = category_id;\r\n    }\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Post Details\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label={(\r\n              <span>\r\n                Title&nbsp;\r\n                <Tooltip title=\"What is the title of the post\">\r\n                  <Icon type=\"question-circle-o\" />\r\n                </Tooltip>\r\n              </span>\r\n)}\r\n          >\r\n            {getFieldDecorator('title', {\r\n              initialValue: title,\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Seo name</span>}>\r\n            {getFieldDecorator('seo', {\r\n              initialValue: seo,\r\n              rules: [\r\n                {\r\n                  max: 20,\r\n                  message: 'Max Letters for Seo is 20',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Post Introduction</span>}>\r\n            {getFieldDecorator('post_intro', {\r\n              initialValue: post_intro,\r\n              rules: [\r\n                {\r\n                  max: 260,\r\n                  message: 'Max Letters for Intro is 260',\r\n                  whitespace: true,\r\n                },\r\n              ],\r\n            })(<TextArea rows={4} />)}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label=\"Header Photo\">\r\n            <Upload\r\n              action=\"/api/v2/files/uploadFile\"\r\n              listType=\"picture-card\"\r\n              fileList={fileList}\r\n              onPreview={this.handlePreview}\r\n              onChange={this.handleChange}\r\n              withCredentials\r\n              onRemove={this.removeFile}\r\n            >\r\n              {fileList.length >= 5 ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n              visible={previewVisible}\r\n              footer={null}\r\n              onCancel={this.handleCancel}\r\n            >\r\n              <img\r\n                alt=\"example\"\r\n                style={{ width: '100%' }}\r\n                src={`/api/v2/files/getFile/${pic}`}\r\n              />\r\n            </Modal>\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label={<span>Category</span>}>\r\n            {getFieldDecorator('category_id', {\r\n              initialValue,\r\n            })(\r\n              <Select>\r\n                {categories.length\r\n                  && categories.map(cat => (\r\n                    <Option value={cat.id}>{cat.name}</Option>\r\n                  ))}\r\n              </Select>,\r\n            )}\r\n          </FormItem>\r\n          {content.length ? (\r\n            <FormItem\r\n              {...formItemLayout}\r\n              label={<span>Description</span>}>\r\n              <Editor\r\n                initialValue={content}\r\n                init={{\r\n                  images_upload_url: '/api/v2/files/uploadFile',\r\n                  images_upload_base_path: '/api/v2/files/uploadFile',\r\n                  image_caption: true,\r\n                  images_upload_handler: (blobInfo, success, failure) => {\r\n                    const formData = new FormData();\r\n                    formData.append('file', blobInfo.blob());\r\n                    axios.post('/api/v2/files/uploadFile', formData).then((result) => {\r\n                      const { data: { fullName } } = result;\r\n                      success(`/api/v2/files/getFile/${fullName}`);\r\n                    }).catch((error) => {\r\n                      failure('error !');\r\n                    });\r\n                  },\r\n                  height: 700,\r\n                  image_title: true,\r\n                  automatic_uploads: true,\r\n                  file_picker_types: 'file image media',\r\n                  images_upload_credentials: true,\r\n                  plugins: 'print preview fullpage powerpaste searchreplace autolink directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount tinymcespellchecker a11ychecker imagetools textpattern help formatpainter permanentpen pageembed mentions linkchecker',\r\n                  toolbar: 'formatselect | bold italic strikethrough forecolor backcolor permanentpen formatpainter | link image media pageembed | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent | removeformat | addcomment',\r\n                }}\r\n                onChange={this.handleEditorChange}\r\n      />\r\n            </FormItem>\r\n          ) : null }\r\n          <FormItem {...formItemLayout} label=\"Meta tags\">\r\n            <div>\r\n              {tags.map((tag) => {\r\n                const isLongTag = tag.length > 20;\r\n                const tagElem = (\r\n                  <Tag\r\n                    key={tag}\r\n                    closable\r\n                    afterClose={() => this.handleClose(tag)}\r\n                  >\r\n                    {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                  </Tag>\r\n                );\r\n                return isLongTag ? (\r\n                  <Tooltip title={tag} key={tag}>\r\n                    {tagElem}\r\n                  </Tooltip>\r\n                ) : (\r\n                  tagElem\r\n                );\r\n              })}\r\n              {inputVisible && (\r\n                <Input\r\n                  ref={this.saveInputRef}\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                  style={{ width: 78 }}\r\n                  value={inputValue}\r\n                  onChange={this.handleInputChange}\r\n                  onBlur={this.handleInputConfirm}\r\n                  onPressEnter={this.handleInputConfirm}\r\n                />\r\n              )}\r\n              {!inputVisible && (\r\n                <Tag\r\n                  onClick={this.showInput}\r\n                  style={{ background: '#fff', borderStyle: 'dashed' }}\r\n                >\r\n                  <Icon type=\"plus\" /> New Tag\r\n                </Tag>\r\n              )}\r\n            </div>\r\n          </FormItem>\r\n          {values ? (\r\n            role === 'admin' ? (\r\n              approve ? (\r\n                headingLength < 4 || hero ? (\r\n                  <FormItem\r\n                    {...formItemLayout}\r\n                    label={<span>Hero Section</span>}\r\n                  >\r\n                    {getFieldDecorator('hero')(\r\n                      <Checkbox\r\n                        checked={this.state.checked}\r\n                        onChange={this.onChangeCheck}\r\n                      >\r\n                        Do you want to view this post in the hero section\r\n                      </Checkbox>,\r\n                    )}\r\n                  </FormItem>\r\n                ) : (\r\n                  <FormItem\r\n                    {...formItemLayout}\r\n                    label={<span>Hero Section</span>}\r\n                  >\r\n                    <span style={{ color: 'red' }}>\r\n                      You can only put 4 posts in Hero Section\r\n                    </span>\r\n                    ,\r\n                  </FormItem>\r\n                )\r\n              ) : (\r\n                <FormItem {...formItemLayout} label={<span>Hero Section</span>}>\r\n                  <span style={{ color: 'red' }}>Post isn't approved !</span>,\r\n                </FormItem>\r\n              )\r\n            ) : null\r\n          ) : null}\r\n          <FormItem {...formItemLayout} label={<span>Breaking News</span>}>\r\n            {getFieldDecorator('breaking')(\r\n              <Checkbox\r\n                checked={this.state.breakingNews}\r\n                onChange={this.onChangeBreaking}\r\n              >\r\n                Do you want to consider this post as a breaking news ?\r\n              </Checkbox>,\r\n            )}\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Update Post\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n        <NotificationContainer />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n  const { authUser, url, role } = auth;\r\n  return {\r\n    authUser,\r\n    url,\r\n    role,\r\n  };\r\n};\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default connect(mapStateToProps)(RegistrationForm);\r\n"],"sourceRoot":""}